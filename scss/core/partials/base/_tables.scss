// # Tables
// We have a lot at our disposal for making very complex table constructs, e.g.:

%lego-table,
.lego-table {
  width: 100%;
  font-size: inherit;

  th,
  td {
    padding-left: spacer(2);
    padding-top: spacer(0.5);
    padding-bottom: spacer(0.5);

    &:first-child {
      padding-left: 0;
    }
  }

  th {
    text-transform: uppercase;
    font-weight: map-get($font-weight, bold);
    font-size: map-get($font-size, micro);
    color: map-get($font-color, muted);
    text-align: left;
  }

  // ## Cell Alignments
  // Defaults for cell alignments with one helper class for numbers.

  [rowspan] {
    vertical-align: middle;
  }

  [rowspan="1"] {
    vertical-align: top;
  }

  [colspan] {
    text-align: center;
  }

  [colspan="1"] {
    text-align: left;
  }

  .numerical {
    text-align: right;
  }

  .cell-collapse {
    width: 1%;
  }


  // ## Table Variations
  // We're using direct decendent selectors so any child tables do not inherit styles.

  &--rule {

    > thead > th {
      padding-bottom: spacer(1);
    }

    > tbody > tr {
      border-top: 1px solid map-get($ui-color, light);
    }

  }

  &--wall {

    > thead > tr > th,
    > tbody > tr > td {
      border-left: 1px solid map-get($ui-color, light);
      padding-right: spacer(1);

      &:first-child {
        border-left: 0;
      }
    }
  }

  &--hover {

    > tbody > tr {

      &:hover {
        background-color: map-get($background-color, brand-light);
        cursor: pointer;
      }
    }
  }
}

// Added to the table row.

.lego-table-row--active {
  background-color: map-get($background-color, brand-light);
}
