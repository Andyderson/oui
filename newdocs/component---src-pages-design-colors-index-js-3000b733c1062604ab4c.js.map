{"version":3,"sources":["webpack:///component---src-pages-design-colors-index-js-3000b733c1062604ab4c.js","webpack:///./src/pages/design/colors/index.js"],"names":["webpackJsonp","277","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_taggedTemplateLiteralLoose","strings","raw","_templateObject","_templateObject2","_templateObject3","_templateObject4","_react","_react2","_styledComponents","_styledComponents2","colors","name","var","hex","color","ColorsContainer","div","TyleContainer","Tyle","_ref","TyleText","_ref2","Colors","createElement","map","key","style","fontSize"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,EAASC,GAEhC,YAiBA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAEvF,QAASG,GAA4BC,EAASC,GAA0B,MAAnBD,GAAQC,IAAMA,EAAYD,EAjB/EP,EAAQI,YAAa,CAErB,IAAIK,GAAkBH,GAA6B,iFAAkF,iFACjII,EAAmBJ,GAA6B,wEAAyE,wEACzHK,EAAmBL,GAA6B,yBAA0B,wHAAyH,yBAA0B,wHAC7NM,EAAmBN,GAA6B,cAAe,+BAAgC,cAAe,+BCZnHO,EAAAZ,EAAA,GDgBKa,EAAUZ,EAAuBW,GCftCE,EAAAd,EAAA,IDmBKe,EAAqBd,EAAuBa,GCjB3CE,IACFC,KAAM,aAAcC,IAAK,cAAeC,IAAK,UAAWC,MAAO,UAC/DH,KAAM,WAAYC,IAAK,YAAaC,IAAK,UAAWC,MAAO,UAC3DH,KAAM,YAAaC,IAAK,aAAcC,IAAK,UAAWC,MAAO,SAC7DH,KAAM,QAASC,IAAK,SAAUC,IAAK,UAAWC,MAAO,SAGnDC,EAAkBN,EAAAX,QAAOkB,IAAzBd,GAMAe,EAAgBR,EAAAX,QAAOkB,IAAvBb,GAMAe,EAAOT,EAAAX,QAAOkB,IAAdZ,EACgB,SAAAe,GAAA,GAAEN,GAAFM,EAAEN,GAAF,OAAWA,GAAMA,EAAM,SAQvCO,EAAWX,EAAAX,QAAOkB,IAAlBX,EACM,SAAAgB,GAAA,GAAEP,GAAFO,EAAEP,KAAF,OAAaA,GAAQA,EAAQ,UAInCQ,EAAS,WACb,MACEf,GAAAT,QAAAyB,cAAA,WACEhB,EAAAT,QAAAyB,cAAA,oBACAhB,EAAAT,QAAAyB,cAACR,EAAD,KACIL,EAAOc,IAAI,SAAAV,GAAA,MACXP,GAAAT,QAAAyB,cAACN,GAAcQ,IAAMX,EAAMD,KACzBN,EAAAT,QAAAyB,cAACL,GAAKL,IAAMC,EAAMD,KAChBN,EAAAT,QAAAyB,cAACH,GAASN,MAAQA,EAAMA,OACtBP,EAAAT,QAAAyB,cAAA,YAAQT,EAAMH,MAAaJ,EAAAT,QAAAyB,cAAA,WAC3BhB,EAAAT,QAAAyB,cAAA,QAAMG,OAASC,SAAU,WAAcb,EAAMD,WAOvDN,EAAAT,QAAAyB,cAAA,wRAEAhB,EAAAT,QAAAyB,cAAA,6BACAhB,EAAAT,QAAAyB,cAAA,SAAGhB,EAAAT,QAAAyB,cAAA,qCAAH,kTAEAhB,EAAAT,QAAAyB,cAAA,SAAGhB,EAAAT,QAAAyB,cAAA,kCAAH,6PDuDL9B,GAAQK,QClDMwB,EDmDd9B,EAAOC,QAAUA,EAAiB","file":"component---src-pages-design-colors-index-js-3000b733c1062604ab4c.js","sourcesContent":["webpackJsonp([191219007514053],{\n\n/***/ 277:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _templateObject = _taggedTemplateLiteralLoose(['\\n  display: flex;\\n  justify-content: space-between;\\n  max-width: 800px;\\n'], ['\\n  display: flex;\\n  justify-content: space-between;\\n  max-width: 800px;\\n']),\n\t    _templateObject2 = _taggedTemplateLiteralLoose(['\\n  width: 150px;\\n  height: 200px;\\n  border: 1px solid #f6f6f6;\\n'], ['\\n  width: 150px;\\n  height: 200px;\\n  border: 1px solid #f6f6f6;\\n']),\n\t    _templateObject3 = _taggedTemplateLiteralLoose(['\\n  background-color: ', ';\\n  width: 100%;\\n  height: 70%;\\n  margin: 0px auto;\\n  padding-top: 55px;\\n  box-shadow: 0.5px 0.5px 1px #ccc;\\n'], ['\\n  background-color: ', ';\\n  width: 100%;\\n  height: 70%;\\n  margin: 0px auto;\\n  padding-top: 55px;\\n  box-shadow: 0.5px 0.5px 1px #ccc;\\n']),\n\t    _templateObject4 = _taggedTemplateLiteralLoose(['\\n  color: ', ';\\n  text-align: center;\\n'], ['\\n  color: ', ';\\n  text-align: center;\\n']);\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _styledComponents = __webpack_require__(21);\n\t\n\tvar _styledComponents2 = _interopRequireDefault(_styledComponents);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _taggedTemplateLiteralLoose(strings, raw) { strings.raw = raw; return strings; }\n\t\n\tvar colors = [{ name: 'BRAND BLUE', var: '$brand-blue', hex: '#0081BA', color: 'white' }, { name: 'CHARCOAL', var: '$charcoal', hex: '#808080', color: 'white' }, { name: 'KARL GRAY', var: '$karl-gray', hex: '#f7f7f7', color: '#666' }, { name: 'WHITE', var: '$white', hex: '#FFFFFF', color: '#666' }];\n\t\n\tvar ColorsContainer = _styledComponents2.default.div(_templateObject);\n\t\n\tvar TyleContainer = _styledComponents2.default.div(_templateObject2);\n\t\n\tvar Tyle = _styledComponents2.default.div(_templateObject3, function (_ref) {\n\t  var hex = _ref.hex;\n\t  return hex ? hex : '#ccc';\n\t});\n\t\n\tvar TyleText = _styledComponents2.default.div(_templateObject4, function (_ref2) {\n\t  var color = _ref2.color;\n\t  return color ? color : 'white';\n\t});\n\t\n\tvar Colors = function Colors() {\n\t  return _react2.default.createElement(\n\t    'div',\n\t    null,\n\t    _react2.default.createElement(\n\t      'h1',\n\t      null,\n\t      'Colors'\n\t    ),\n\t    _react2.default.createElement(\n\t      ColorsContainer,\n\t      null,\n\t      colors.map(function (color) {\n\t        return _react2.default.createElement(\n\t          TyleContainer,\n\t          { key: color.hex },\n\t          _react2.default.createElement(\n\t            Tyle,\n\t            { hex: color.hex },\n\t            _react2.default.createElement(\n\t              TyleText,\n\t              { color: color.color },\n\t              _react2.default.createElement(\n\t                'span',\n\t                null,\n\t                color.name\n\t              ),\n\t              _react2.default.createElement('br', null),\n\t              _react2.default.createElement(\n\t                'span',\n\t                { style: { fontSize: '0.8rem' } },\n\t                color.hex\n\t              )\n\t            )\n\t          )\n\t        );\n\t      })\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      'The Optimizely color palette is meant to be light and unobtrusive, with thoughtful accents of color. Proper application of these colors will ensure the visual identity is maintained across all branded elements. Color usage should roughly map to the proportions below.'\n\t    ),\n\t    _react2.default.createElement(\n\t      'h2',\n\t      null,\n\t      'Primary palette'\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      _react2.default.createElement(\n\t        'strong',\n\t        null,\n\t        'Our primary palette'\n\t      ),\n\t      ' consists of our brand blue, charcoal gray, background gray, and white. Our brand blue should be used thoughtfully to reinforce our identity, as overuse can dilute its visual impact. Brand blue on a neutral background is often more successful at establishing brand equity than full washes of the color.'\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      _react2.default.createElement(\n\t        'strong',\n\t        null,\n\t        'Tints and shades'\n\t      ),\n\t      ' of the primary palette should be used to directly supplement the original swatch, and they should never be used in place of the original swatch. They are primarily intended for button states, borders, illustration shadings, and data visualization.'\n\t    )\n\t  );\n\t};\n\t\n\texports.default = Colors;\n\tmodule.exports = exports['default'];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-design-colors-index-js-3000b733c1062604ab4c.js","import React from 'react';\nimport styled from 'styled-components';\n\nconst colors = [\n  { name: 'BRAND BLUE', var: '$brand-blue', hex: '#0081BA', color: 'white'},\n  { name: 'CHARCOAL', var: '$charcoal', hex: '#808080', color: 'white'},\n  { name: 'KARL GRAY', var: '$karl-gray', hex: '#f7f7f7', color: '#666'},\n  { name: 'WHITE', var: '$white', hex: '#FFFFFF', color: '#666'},\n];\n\nconst ColorsContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  max-width: 800px;\n`;\n\nconst TyleContainer = styled.div`\n  width: 150px;\n  height: 200px;\n  border: 1px solid #f6f6f6;\n`;\n\nconst Tyle = styled.div`\n  background-color: ${({hex}) => hex ? hex : '#ccc'};\n  width: 100%;\n  height: 70%;\n  margin: 0px auto;\n  padding-top: 55px;\n  box-shadow: 0.5px 0.5px 1px #ccc;\n`;\n\nconst TyleText = styled.div`\n  color: ${ ({color}) => color ? color : 'white'};\n  text-align: center;\n`;\n\nconst Colors = () => {\n  return (\n    <div>\n      <h1>Colors</h1>\n      <ColorsContainer>\n        { colors.map(color => (\n          <TyleContainer key={ color.hex }>\n            <Tyle hex={ color.hex }>\n              <TyleText color={ color.color }>\n                <span>{ color.name }</span><br />\n                <span style={{ fontSize: '0.8rem' }}>{ color.hex }</span>\n              </TyleText>\n            </Tyle>\n          </TyleContainer>\n        ))}\n      </ColorsContainer>\n      \n      <p>The Optimizely color palette is meant to be light and unobtrusive, with thoughtful accents of color. Proper application of these colors will ensure the visual identity is maintained across all branded elements. Color usage should roughly map to the proportions below.</p>\n\n      <h2>Primary palette</h2>\n      <p><strong>Our primary palette</strong> consists of our brand blue, charcoal gray, background gray, and white. Our brand blue should be used thoughtfully to reinforce our identity, as overuse can dilute its visual impact. Brand blue on a neutral background is often more successful at establishing brand equity than full washes of the color.</p>\n\n      <p><strong>Tints and shades</strong> of the primary palette should be used to directly supplement the original swatch, and they should never be used in place of the original swatch. They are primarily intended for button states, borders, illustration shadings, and data visualization.</p>\n    </div>\n  );\n};\n\nexport default Colors;\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/design/colors/index.js"],"sourceRoot":""}