{"version":3,"sources":["webpack:///component---src-pages-components-text-field-js-1ab4057edd3428f54407.js","webpack:///./src/pages/components/TextField.js","webpack:///../src/components/TextField/README.md","webpack:///../src/components/TextField/example/index.js","webpack:///../src/components/TextField/index.js"],"names":["webpackJsonp","273","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_react","_react2","_ComponentContent","_ComponentContent2","_example","_example2","_README","_README2","sassData","reactData","description","displayName","methods","name","docblock","modifiers","params","type","returns","props","defaultValue","required","displayError","isDisabled","isFilter","isOptional","isReadOnly","isRequired","label","max","min","note","onBlur","onChange","onFocus","onInput","onKeyDown","placeholder","testSection","computed","private","dataObject","react","examples","readme","sass","TextFieldComponent","_React$Component","this","apply","arguments","render","createElement","data","Component","657","334","_index","_index2","335","_Label","_Label2","_classnames","_classnames2","_propTypes","_propTypes2","TextField","_ref","_ref$note","undefined","_ref$displayError","_ref$isDisabled","_ref$isFilter","wrapperClasses","oui-form-bad-news","classes","oui-text-input--search","data-oui-component","className","readOnly","disabled","data-test-section","propTypes","string","bool","number","func","oneOf"],"mappings":"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","file":"component---src-pages-components-text-field-js-1ab4057edd3428f54407.js","sourcesContent":["webpackJsonp([165334937855266],{\n\n/***/ 273:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _ComponentContent = __webpack_require__(5);\n\t\n\tvar _ComponentContent2 = _interopRequireDefault(_ComponentContent);\n\t\n\tvar _example = __webpack_require__(334);\n\t\n\tvar _example2 = _interopRequireDefault(_example);\n\t\n\tvar _README = __webpack_require__(657);\n\t\n\tvar _README2 = _interopRequireDefault(_README);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar sassData = null;\n\tvar reactData = { \"description\": \"Generates an `input` element (optionally wrapped in a label) and accepts\\nmost of the common input types.\", \"displayName\": \"Input\", \"methods\": [{ \"name\": \"renderInput\", \"docblock\": null, \"modifiers\": [], \"params\": [{ \"name\": \"{\\n  note,\\n  defaultValue,\\n  displayError = false,\\n  isDisabled = false,\\n  isFilter = false,\\n  isOptional,\\n  isReadOnly,\\n  onBlur,\\n  isRequired,\\n  label,\\n  min,\\n  max,\\n  onChange,\\n  onInput,\\n  onKeyDown,\\n  onFocus,\\n  placeholder,\\n  testSection,\\n  type,\\n  value,\\n}\", \"type\": null }], \"returns\": null }], \"props\": { \"defaultValue\": { \"type\": { \"name\": \"string\" }, \"required\": false, \"description\": \"The default value of the input used on initial render\" }, \"displayError\": { \"type\": { \"name\": \"bool\" }, \"required\": false, \"description\": \"Toggle error state styles\" }, \"isDisabled\": { \"type\": { \"name\": \"bool\" }, \"required\": false, \"description\": \"Prevents input from being modified and appears disabled\" }, \"isFilter\": { \"type\": { \"name\": \"bool\" }, \"required\": false, \"description\": \"Includes error if true\" }, \"isOptional\": { \"type\": { \"name\": \"bool\" }, \"required\": false, \"description\": \"Adds an optional label if there is a label provided\\n @param {Object} props Object of props\\n @returns {Error} Error or null\" }, \"isReadOnly\": { \"type\": { \"name\": \"bool\" }, \"required\": false, \"description\": \"Prevents input from being modified but doesn't appear disabled\" }, \"isRequired\": { \"type\": { \"name\": \"bool\" }, \"required\": false, \"description\": \"Prevents input from being submitted without value\" }, \"label\": { \"type\": { \"name\": \"string\" }, \"required\": false, \"description\": \"Text that describes the input\" }, \"max\": { \"type\": { \"name\": \"number\" }, \"required\": false, \"description\": \"Max value for the `input`. Should be used only when `type` is `number`.\" }, \"min\": { \"type\": { \"name\": \"number\" }, \"required\": false, \"description\": \"Min value for the `input`. Should be used only when `type` is `number`.\" }, \"note\": { \"type\": { \"name\": \"string\" }, \"required\": false, \"description\": \"Append note near form input.\" }, \"onBlur\": { \"type\": { \"name\": \"func\" }, \"required\": false, \"description\": \"Function that fires when the input loses focus. It fires regardless of\\nwhether the value has changed.\" }, \"onChange\": { \"type\": { \"name\": \"func\" }, \"required\": false, \"description\": \"Function that fires when the input loses focus after the value changes\" }, \"onFocus\": { \"type\": { \"name\": \"func\" }, \"required\": false, \"description\": \"Function that fires when the input gains focus\" }, \"onInput\": { \"type\": { \"name\": \"func\" }, \"required\": false, \"description\": \"Function that fires on keypress\" }, \"onKeyDown\": { \"type\": { \"name\": \"func\" }, \"required\": false, \"description\": \"Function that fires when a key is pressed down\" }, \"placeholder\": { \"type\": { \"name\": \"string\" }, \"required\": false, \"description\": \"Input placeholder text\" }, \"testSection\": { \"type\": { \"name\": \"string\" }, \"required\": false, \"description\": \"Hook for automated JavaScript tests\" }, \"type\": { \"type\": { \"name\": \"enum\", \"value\": [{ \"value\": \"'text'\", \"computed\": false }, { \"value\": \"'password'\", \"computed\": false }, { \"value\": \"'date'\", \"computed\": false }, { \"value\": \"'number'\", \"computed\": false }, { \"value\": \"'email'\", \"computed\": false }, { \"value\": \"'url'\", \"computed\": false }, { \"value\": \"'search'\", \"computed\": false }, { \"value\": \"'tel'\", \"computed\": false }] }, \"required\": true, \"description\": \"Supported input types\" }, \"value\": { \"type\": { \"name\": \"string\" }, \"required\": false, \"description\": \"Text within the input\" } }, \"private\": false };\n\t\n\tvar dataObject = {\n\t  react: reactData,\n\t  examples: _example2.default ? _example2.default : null,\n\t  readme: _README2.default ? _README2.default : null,\n\t  sass: sassData\n\t};\n\t\n\tvar TextFieldComponent = function (_React$Component) {\n\t  _inherits(TextFieldComponent, _React$Component);\n\t\n\t  function TextFieldComponent() {\n\t    _classCallCheck(this, TextFieldComponent);\n\t\n\t    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n\t  }\n\t\n\t  TextFieldComponent.prototype.render = function render() {\n\t    return _react2.default.createElement(_ComponentContent2.default, { data: dataObject });\n\t  };\n\t\n\t  return TextFieldComponent;\n\t}(_react2.default.Component);\n\t\n\texports.default = TextFieldComponent;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 657:\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"# TextField Component\\n\\n- Add storybook link\\n- Add deisgn guidelines\"\n\n/***/ }),\n\n/***/ 334:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _index = __webpack_require__(335);\n\t\n\tvar _index2 = _interopRequireDefault(_index);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/* eslint-disable react/jsx-key */\n\texports.default = [{\n\t  examples: [_react2.default.createElement(_index2.default, {\n\t    label: 'Field label',\n\t    note: 'A short description or note about this field.',\n\t    placeholder: 'Just a placeholder',\n\t    type: 'text',\n\t    isOptional: true\n\t  })]\n\t}, {\n\t  examples: [_react2.default.createElement(_index2.default, {\n\t    label: 'Field label with error',\n\t    displayError: true,\n\t    note: 'A short description or note about this field.',\n\t    placeholder: 'Just a placeholder',\n\t    type: 'text',\n\t    isRequired: true\n\t  })]\n\t}];\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 335:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _Label = __webpack_require__(31);\n\t\n\tvar _Label2 = _interopRequireDefault(_Label);\n\t\n\tvar _classnames = __webpack_require__(9);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Generates an `input` element (optionally wrapped in a label) and accepts\n\t * most of the common input types.\n\t * @param {Object} props - Properties passed to component\n\t * @returns {ReactElement}\n\t */\n\t\n\tvar TextField = function TextField(_ref) {\n\t  var _ref$note = _ref.note,\n\t      note = _ref$note === undefined ? false : _ref$note,\n\t      defaultValue = _ref.defaultValue,\n\t      _ref$displayError = _ref.displayError,\n\t      displayError = _ref$displayError === undefined ? false : _ref$displayError,\n\t      _ref$isDisabled = _ref.isDisabled,\n\t      isDisabled = _ref$isDisabled === undefined ? false : _ref$isDisabled,\n\t      _ref$isFilter = _ref.isFilter,\n\t      isFilter = _ref$isFilter === undefined ? false : _ref$isFilter,\n\t      isOptional = _ref.isOptional,\n\t      isReadOnly = _ref.isReadOnly,\n\t      onBlur = _ref.onBlur,\n\t      isRequired = _ref.isRequired,\n\t      label = _ref.label,\n\t      min = _ref.min,\n\t      max = _ref.max,\n\t      onChange = _ref.onChange,\n\t      onInput = _ref.onInput,\n\t      onKeyDown = _ref.onKeyDown,\n\t      onFocus = _ref.onFocus,\n\t      placeholder = _ref.placeholder,\n\t      testSection = _ref.testSection,\n\t      type = _ref.type,\n\t      value = _ref.value;\n\t\n\t\n\t  var wrapperClasses = (0, _classnames2.default)({ 'oui-form-bad-news': displayError });\n\t\n\t  var classes = (0, _classnames2.default)('oui-text-input', { 'oui-text-input--search': isFilter });\n\t\n\t  return (\n\t    /* eslint-disable react/jsx-no-bind */\n\t    _react2.default.createElement(\n\t      'div',\n\t      {\n\t        'data-oui-component': true,\n\t        className: wrapperClasses ? 'oui-form-bad-news' : null },\n\t      label && _react2.default.createElement(\n\t        _Label2.default,\n\t        {\n\t          displayError: displayError,\n\t          isRequired: isRequired,\n\t          isOptional: isOptional },\n\t        label\n\t      ),\n\t      _react2.default.createElement('input', {\n\t        className: classes,\n\t        type: type,\n\t        value: value,\n\t        defaultValue: defaultValue,\n\t        placeholder: placeholder,\n\t        required: isRequired,\n\t        readOnly: isReadOnly,\n\t        disabled: isDisabled,\n\t        onInput: onInput,\n\t        onChange: onChange,\n\t        onBlur: onBlur,\n\t        onKeyDown: onKeyDown,\n\t        onFocus: onFocus,\n\t        min: min,\n\t        max: max,\n\t        'data-test-section': testSection\n\t      }),\n\t      note && _react2.default.createElement(\n\t        'div',\n\t        { className: 'oui-form-note' },\n\t        note\n\t      )\n\t    )\n\t  );\n\t};\n\t\n\tTextField.propTypes = {\n\t  /** The default value of the input used on initial render */\n\t  defaultValue: _propTypes2.default.string,\n\t  /** Toggle error state styles  */\n\t  displayError: _propTypes2.default.bool,\n\t  /** Prevents input from being modified and appears disabled */\n\t  isDisabled: _propTypes2.default.bool,\n\t  /** Includes error if true */\n\t  isFilter: _propTypes2.default.bool,\n\t  /** Adds an optional label if there is a label provided\n\t   *  @param {Object} props Object of props\n\t   *  @returns {Error} Error or null\n\t   */\n\t  isOptional: _propTypes2.default.bool,\n\t  /** Prevents input from being modified but doesn't appear disabled */\n\t  isReadOnly: _propTypes2.default.bool,\n\t  /** Prevents input from being submitted without value */\n\t  isRequired: _propTypes2.default.bool,\n\t  /** Text that describes the input */\n\t  label: _propTypes2.default.string,\n\t  /**\n\t   * Max value for the `input`. Should be used only when `type` is `number`.\n\t   */\n\t  max: _propTypes2.default.number,\n\t  /**\n\t   * Min value for the `input`. Should be used only when `type` is `number`.\n\t   */\n\t  min: _propTypes2.default.number,\n\t  /** Append note near form input. */\n\t  note: _propTypes2.default.string,\n\t  /**\n\t   * Function that fires when the input loses focus. It fires regardless of\n\t   * whether the value has changed.\n\t  */\n\t  onBlur: _propTypes2.default.func,\n\t  /** Function that fires when the input loses focus after the value changes */\n\t  onChange: _propTypes2.default.func,\n\t  /** Function that fires when the input gains focus */\n\t  onFocus: _propTypes2.default.func,\n\t  /** Function that fires on keypress */\n\t  onInput: _propTypes2.default.func,\n\t  /** Function that fires when a key is pressed down */\n\t  onKeyDown: _propTypes2.default.func,\n\t  /** Input placeholder text */\n\t  placeholder: _propTypes2.default.string,\n\t  /** Hook for automated JavaScript tests */\n\t  testSection: _propTypes2.default.string,\n\t  /** Supported input types */\n\t  type: _propTypes2.default.oneOf(['text', 'password', 'date', 'number', 'email', 'url', 'search', 'tel']).isRequired,\n\t  /** Text within the input */\n\t  value: _propTypes2.default.string\n\t};\n\t\n\texports.default = TextField;\n\tmodule.exports = exports['default'];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-components-text-field-js-1ab4057edd3428f54407.js","\n  import React from 'react';\n  import ComponentContent from '../../layouts/templates/ComponentContent';\n\n   import examples from '../../../../src/components/TextField/example'; import readme from 'raw-loader!../../../../src/components/TextField/README.md';\n\n  const sassData = null;\n  const reactData = {\"description\":\"Generates an `input` element (optionally wrapped in a label) and accepts\\nmost of the common input types.\",\"displayName\":\"Input\",\"methods\":[{\"name\":\"renderInput\",\"docblock\":null,\"modifiers\":[],\"params\":[{\"name\":\"{\\n  note,\\n  defaultValue,\\n  displayError = false,\\n  isDisabled = false,\\n  isFilter = false,\\n  isOptional,\\n  isReadOnly,\\n  onBlur,\\n  isRequired,\\n  label,\\n  min,\\n  max,\\n  onChange,\\n  onInput,\\n  onKeyDown,\\n  onFocus,\\n  placeholder,\\n  testSection,\\n  type,\\n  value,\\n}\",\"type\":null}],\"returns\":null}],\"props\":{\"defaultValue\":{\"type\":{\"name\":\"string\"},\"required\":false,\"description\":\"The default value of the input used on initial render\"},\"displayError\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Toggle error state styles\"},\"isDisabled\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Prevents input from being modified and appears disabled\"},\"isFilter\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Includes error if true\"},\"isOptional\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Adds an optional label if there is a label provided\\n @param {Object} props Object of props\\n @returns {Error} Error or null\"},\"isReadOnly\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Prevents input from being modified but doesn't appear disabled\"},\"isRequired\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Prevents input from being submitted without value\"},\"label\":{\"type\":{\"name\":\"string\"},\"required\":false,\"description\":\"Text that describes the input\"},\"max\":{\"type\":{\"name\":\"number\"},\"required\":false,\"description\":\"Max value for the `input`. Should be used only when `type` is `number`.\"},\"min\":{\"type\":{\"name\":\"number\"},\"required\":false,\"description\":\"Min value for the `input`. Should be used only when `type` is `number`.\"},\"note\":{\"type\":{\"name\":\"string\"},\"required\":false,\"description\":\"Append note near form input.\"},\"onBlur\":{\"type\":{\"name\":\"func\"},\"required\":false,\"description\":\"Function that fires when the input loses focus. It fires regardless of\\nwhether the value has changed.\"},\"onChange\":{\"type\":{\"name\":\"func\"},\"required\":false,\"description\":\"Function that fires when the input loses focus after the value changes\"},\"onFocus\":{\"type\":{\"name\":\"func\"},\"required\":false,\"description\":\"Function that fires when the input gains focus\"},\"onInput\":{\"type\":{\"name\":\"func\"},\"required\":false,\"description\":\"Function that fires on keypress\"},\"onKeyDown\":{\"type\":{\"name\":\"func\"},\"required\":false,\"description\":\"Function that fires when a key is pressed down\"},\"placeholder\":{\"type\":{\"name\":\"string\"},\"required\":false,\"description\":\"Input placeholder text\"},\"testSection\":{\"type\":{\"name\":\"string\"},\"required\":false,\"description\":\"Hook for automated JavaScript tests\"},\"type\":{\"type\":{\"name\":\"enum\",\"value\":[{\"value\":\"'text'\",\"computed\":false},{\"value\":\"'password'\",\"computed\":false},{\"value\":\"'date'\",\"computed\":false},{\"value\":\"'number'\",\"computed\":false},{\"value\":\"'email'\",\"computed\":false},{\"value\":\"'url'\",\"computed\":false},{\"value\":\"'search'\",\"computed\":false},{\"value\":\"'tel'\",\"computed\":false}]},\"required\":true,\"description\":\"Supported input types\"},\"value\":{\"type\":{\"name\":\"string\"},\"required\":false,\"description\":\"Text within the input\"}},\"private\":false};\n\n  let dataObject = {\n    react: reactData, \n    examples: examples ? examples : null,\n    readme: readme ? readme : null,\n    sass: sassData,\n  }\n  \n  class TextFieldComponent extends React.Component {\n  \n    render() {\n      return (\n        <ComponentContent data={ dataObject } />\n      );\n    };\n  }\n  \n  export default TextFieldComponent\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/components/TextField.js","module.exports = \"# TextField Component\\n\\n- Add storybook link\\n- Add deisgn guidelines\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!../src/components/TextField/README.md\n// module id = 657\n// module chunks = 165334937855266","/* eslint-disable react/jsx-key */\nimport React from 'react';\nimport TextField from '../index';\n\nexport default [\n  {\n    examples: [\n      <TextField\n        label=\"Field label\"\n        note=\"A short description or note about this field.\"\n        placeholder=\"Just a placeholder\"\n        type=\"text\"\n        isOptional={ true }\n      />,\n    ],\n  },\n  {\n    examples: [\n      <TextField\n        label=\"Field label with error\"\n        displayError={ true }\n        note=\"A short description or note about this field.\"\n        placeholder=\"Just a placeholder\"\n        type=\"text\"\n        isRequired={ true }\n      />,\n    ],\n  },\n];\n\n\n\n// WEBPACK FOOTER //\n// ../src/components/TextField/example/index.js","import React from 'react';\nimport Label from '../Label';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\n/**\n * Generates an `input` element (optionally wrapped in a label) and accepts\n * most of the common input types.\n * @param {Object} props - Properties passed to component\n * @returns {ReactElement}\n */\n\nconst TextField = ({\n  note = false,\n  defaultValue,\n  displayError = false,\n  isDisabled = false,\n  isFilter = false,\n  isOptional,\n  isReadOnly,\n  onBlur,\n  isRequired,\n  label,\n  min,\n  max,\n  onChange,\n  onInput,\n  onKeyDown,\n  onFocus,\n  placeholder,\n  testSection,\n  type,\n  value,\n}) => {\n\n  let wrapperClasses = classnames(\n    {'oui-form-bad-news': displayError}\n  );\n\n  let classes = classnames(\n    'oui-text-input', {'oui-text-input--search': isFilter}\n  );\n\n  return (\n    /* eslint-disable react/jsx-no-bind */\n    <div\n      data-oui-component={ true }\n      className={ wrapperClasses ? 'oui-form-bad-news' : null }>\n      { label &&\n        <Label\n          displayError={ displayError }\n          isRequired={ isRequired }\n          isOptional={ isOptional }>\n          { label }\n        </Label>\n      }\n      <input\n        className={ classes }\n        type={ type }\n        value={ value }\n        defaultValue={ defaultValue }\n        placeholder={ placeholder }\n        required={ isRequired }\n        readOnly={ isReadOnly }\n        disabled={ isDisabled }\n        onInput={ onInput }\n        onChange={ onChange }\n        onBlur={ onBlur }\n        onKeyDown={ onKeyDown }\n        onFocus={ onFocus }\n        min={ min }\n        max={ max }\n        data-test-section={ testSection }\n      />\n      { note && <div className=\"oui-form-note\">{ note }</div> }\n    </div>\n  );\n};\n\nTextField.propTypes = {\n  /** The default value of the input used on initial render */\n  defaultValue: PropTypes.string,\n  /** Toggle error state styles  */\n  displayError: PropTypes.bool,\n  /** Prevents input from being modified and appears disabled */\n  isDisabled: PropTypes.bool,\n  /** Includes error if true */\n  isFilter: PropTypes.bool,\n  /** Adds an optional label if there is a label provided\n   *  @param {Object} props Object of props\n   *  @returns {Error} Error or null\n   */\n  isOptional: PropTypes.bool,\n  /** Prevents input from being modified but doesn't appear disabled */\n  isReadOnly: PropTypes.bool,\n  /** Prevents input from being submitted without value */\n  isRequired: PropTypes.bool,\n  /** Text that describes the input */\n  label: PropTypes.string,\n  /**\n   * Max value for the `input`. Should be used only when `type` is `number`.\n   */\n  max: PropTypes.number,\n  /**\n   * Min value for the `input`. Should be used only when `type` is `number`.\n   */\n  min: PropTypes.number,\n  /** Append note near form input. */\n  note: PropTypes.string,\n  /**\n   * Function that fires when the input loses focus. It fires regardless of\n   * whether the value has changed.\n  */\n  onBlur: PropTypes.func,\n  /** Function that fires when the input loses focus after the value changes */\n  onChange: PropTypes.func,\n  /** Function that fires when the input gains focus */\n  onFocus: PropTypes.func,\n  /** Function that fires on keypress */\n  onInput: PropTypes.func,\n  /** Function that fires when a key is pressed down */\n  onKeyDown: PropTypes.func,\n  /** Input placeholder text */\n  placeholder: PropTypes.string,\n  /** Hook for automated JavaScript tests */\n  testSection: PropTypes.string,\n  /** Supported input types */\n  type: PropTypes.oneOf([\n    'text',\n    'password',\n    'date',\n    'number',\n    'email',\n    'url',\n    'search',\n    'tel',\n  ]).isRequired,\n  /** Text within the input */\n  value: PropTypes.string,\n};\n\nexport default TextField;\n\n\n\n// WEBPACK FOOTER //\n// ../src/components/TextField/index.js"],"sourceRoot":""}