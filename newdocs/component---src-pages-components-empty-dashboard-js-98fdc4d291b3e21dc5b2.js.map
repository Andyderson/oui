{"version":3,"sources":["webpack:///component---src-pages-components-empty-dashboard-js-98fdc4d291b3e21dc5b2.js","webpack:///./src/pages/components/EmptyDashboard.js","webpack:///../src/components/EmptyDashboard/README.md","webpack:///../src/components/EmptyDashboard/example/index.js","webpack:///../src/components/EmptyDashboard/index.js"],"names":["webpackJsonp","250","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_react","_react2","_ComponentContent","_ComponentContent2","_example","_example2","_README","_README2","sassData","reactData","description","methods","props","button","type","name","required","descriptionMaxWidth","defaultValue","computed","headline","imagePath","testSection","private","dataObject","react","examples","readme","sass","EmptyDashboardComponent","_React$Component","this","apply","arguments","render","createElement","data","Component","637","306","_Button","_Button2","_index","_index2","isPadded","style","307","_propTypes","_propTypes2","EmptyDashboard","_ref","data-oui-component","className","data-test-section","width","margin","data-ui-component","maxWidth","maxHeight","alt","propTypes","node","element","oneOfType","string","number","isRequired","getDefaultProps"],"mappings":"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","file":"component---src-pages-components-empty-dashboard-js-98fdc4d291b3e21dc5b2.js","sourcesContent":["webpackJsonp([147442823180344],{\n\n/***/ 250:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _ComponentContent = __webpack_require__(5);\n\t\n\tvar _ComponentContent2 = _interopRequireDefault(_ComponentContent);\n\t\n\tvar _example = __webpack_require__(306);\n\t\n\tvar _example2 = _interopRequireDefault(_example);\n\t\n\tvar _README = __webpack_require__(637);\n\t\n\tvar _README2 = _interopRequireDefault(_README);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar sassData = null;\n\tvar reactData = { \"description\": \"\", \"methods\": [], \"props\": { \"button\": { \"type\": { \"name\": \"node\" }, \"required\": false, \"description\": \"A button, link, or other element that is actionable\" }, \"description\": { \"type\": { \"name\": \"element\" }, \"required\": false, \"description\": \"A string or `div` containing longer text that describes the empty state\" }, \"descriptionMaxWidth\": { \"type\": { \"name\": \"union\", \"value\": [{ \"name\": \"string\" }, { \"name\": \"number\" }] }, \"required\": false, \"description\": \"Max width of description. Accepts any valid CSS width value.\", \"defaultValue\": { \"value\": \"'450px'\", \"computed\": false } }, \"headline\": { \"type\": { \"name\": \"string\" }, \"required\": true, \"description\": \"Short text about the empty state\" }, \"imagePath\": { \"type\": { \"name\": \"string\" }, \"required\": false, \"description\": \"Path to an image representing the empty state\" }, \"testSection\": { \"type\": { \"name\": \"string\" }, \"required\": false, \"description\": \"Identifier used to create data-test-section attributes for testing\", \"defaultValue\": { \"value\": \"'empty-hello'\", \"computed\": false } } }, \"private\": false };\n\t\n\tvar dataObject = {\n\t  react: reactData,\n\t  examples: _example2.default ? _example2.default : null,\n\t  readme: _README2.default ? _README2.default : null,\n\t  sass: sassData\n\t};\n\t\n\tvar EmptyDashboardComponent = function (_React$Component) {\n\t  _inherits(EmptyDashboardComponent, _React$Component);\n\t\n\t  function EmptyDashboardComponent() {\n\t    _classCallCheck(this, EmptyDashboardComponent);\n\t\n\t    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n\t  }\n\t\n\t  EmptyDashboardComponent.prototype.render = function render() {\n\t    return _react2.default.createElement(_ComponentContent2.default, { data: dataObject });\n\t  };\n\t\n\t  return EmptyDashboardComponent;\n\t}(_react2.default.Component);\n\t\n\texports.default = EmptyDashboardComponent;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 637:\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"# EmptyDashboard Component\\n\\n## Empty states\\nUsers encounter empty states the first time they use our products or a new feature. It’s our opportunity to educate and delight our customers, as well as alleviate their fears and anxieties.\\n\\nA good empty state will inform people what this page is, why they should care, and what their next step should be. Linking to educational content, such as Knowledge Base articles and blog posts, is a great way to make our customers successful. Finally, a good empty state should also have an illustrated graphic to visually explain what the feature does, and save the screen from being just text.\\n\\nA poor empty state, on the other hand, is one that is just blank, or simply tells the user there is no data.\\n\\n## Good Example\\n\\n![alt text](http://design.optimizely.com/assets/img/design-patterns/product/empty-states/example-good.png \\\"empty state example\\\")\\n\\nThe empty Campaigns screen welcomes people to Optimizely Personalization with an illustration, briefly explains what a campaign is, and provides a call-to-action to create a campaign.\\n\\n![alt text] (http://design.optimizely.com/assets/img/design-patterns/product/empty-states/example-sidebar.png \\\"empty state example\\\")\\n\\nSidebars should also have an empty state that explains what the feature does, what the user's next step is, and an illustration.\\n\\n## Bad Example \\n\\n![alt text] (http://design.optimizely.com/assets/img/design-patterns/product/empty-states/example-bad.png \\\"bad example\\\")\\n\\nThe empty state of the Uploaded Lists feature is poor for many reasons. First, it simply states that the user has 0 lists and is using 0 bytes of space. This is dry and not helpful. Second, it states, “No uploaded lists match your filters. Try clearing them to see all of your uploaded lists.” This statement is incorrect and confusing because the user isn’t filtering anything — there simply aren't any lists uploaded yet. The sidebar tells people to select a list, but there aren’t any lists to select. Finally, there’s a missed opportunity to educate users about what this feature is, how to use it, and why they should use it.\\n\\n## Oui React *EmptyDashboard* Component\"\n\n/***/ }),\n\n/***/ 306:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _Button = __webpack_require__(15);\n\t\n\tvar _Button2 = _interopRequireDefault(_Button);\n\t\n\tvar _index = __webpack_require__(307);\n\t\n\tvar _index2 = _interopRequireDefault(_index);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = [{\n\t  isPadded: true,\n\t  examples: [_react2.default.createElement(_index2.default, {\n\t    headline: 'Get started with Optimizely X',\n\t    description: _react2.default.createElement(\n\t      'div',\n\t      null,\n\t      'This is a test description about with a Google.'\n\t    ),\n\t    button: _react2.default.createElement(\n\t      _Button2.default,\n\t      { style: 'highlight' },\n\t      'Highlight'\n\t    ),\n\t    imagePath: 'https://app.optimizely.com/static/img/x/empty-states/campaign-list-empty-state.svg'\n\t  })]\n\t}, {\n\t  isPadded: true,\n\t  examples: [_react2.default.createElement(_index2.default, {\n\t    headline: 'Get started with Optimizely X Extensions',\n\t    description: _react2.default.createElement(\n\t      'div',\n\t      null,\n\t      'This is a test description about with a Google.'\n\t    ),\n\t    button: _react2.default.createElement(\n\t      _Button2.default,\n\t      { style: 'highlight' },\n\t      'Highlight'\n\t    ),\n\t    imagePath: 'https://app.optimizely.com/static/img/x/empty-states/extensions-empty-state.svg'\n\t  })]\n\t}, {\n\t  isPadded: true,\n\t  examples: [_react2.default.createElement(_index2.default, {\n\t    headline: 'Get started with Optimizely X',\n\t    description: _react2.default.createElement(\n\t      'div',\n\t      null,\n\t      'This is a test description about with a Google.'\n\t    ),\n\t    button: _react2.default.createElement(\n\t      _Button2.default,\n\t      { style: 'highlight' },\n\t      'Highlight'\n\t    ),\n\t    imagePath: 'https://app.optimizely.com/static/img/x/empty-states/custom-project-experiments-empty-state.svg'\n\t  })]\n\t}, {\n\t  isPadded: true,\n\t  examples: [_react2.default.createElement(_index2.default, {\n\t    headline: 'Get started with Optimizely X',\n\t    description: _react2.default.createElement(\n\t      'div',\n\t      null,\n\t      'This is a test description about with a Google.'\n\t    ),\n\t    button: _react2.default.createElement(\n\t      _Button2.default,\n\t      { style: 'highlight' },\n\t      'Highlight'\n\t    ),\n\t    imagePath: 'https://app.optimizely.com/static/img/x/empty-states/empty-rollouts.svg'\n\t  })]\n\t}, {\n\t  isPadded: true,\n\t  examples: [_react2.default.createElement(_index2.default, {\n\t    headline: 'Get started with Optimizely X',\n\t    description: _react2.default.createElement(\n\t      'div',\n\t      null,\n\t      'This is a test description about with a Google.'\n\t    ),\n\t    button: _react2.default.createElement(\n\t      _Button2.default,\n\t      { style: 'highlight' },\n\t      'Highlight'\n\t    ),\n\t    imagePath: 'https://app.optimizely.com/static/img/x/empty-states/empty-feature-flags.svg'\n\t  })]\n\t}, {\n\t  isPadded: true,\n\t  examples: [_react2.default.createElement(_index2.default, {\n\t    headline: 'Get started with Optimizely X',\n\t    description: _react2.default.createElement(\n\t      'div',\n\t      null,\n\t      'This is a test description about with a Google.'\n\t    ),\n\t    button: _react2.default.createElement(\n\t      _Button2.default,\n\t      { style: 'highlight' },\n\t      'Highlight'\n\t    ),\n\t    imagePath: 'https://app.optimizely.com/static/img/x/empty-states/audience-list-empty-state.svg'\n\t  })]\n\t}, {\n\t  isPadded: true,\n\t  examples: [_react2.default.createElement(_index2.default, {\n\t    headline: 'Get started with Optimizely X',\n\t    description: _react2.default.createElement(\n\t      'div',\n\t      null,\n\t      'This is a test description about with a Google.'\n\t    ),\n\t    button: _react2.default.createElement(\n\t      _Button2.default,\n\t      { style: 'highlight' },\n\t      'Highlight'\n\t    ),\n\t    imagePath: 'https://app.optimizely.com/static/img/x/empty-states/attribute-dashboard-empty-state.svg'\n\t  })]\n\t}, {\n\t  isPadded: true,\n\t  examples: [_react2.default.createElement(_index2.default, {\n\t    headline: 'Get started with Optimizely X',\n\t    description: _react2.default.createElement(\n\t      'div',\n\t      null,\n\t      'This is a test description about with a Google.'\n\t    ),\n\t    button: _react2.default.createElement(\n\t      _Button2.default,\n\t      { style: 'highlight' },\n\t      'Highlight'\n\t    ),\n\t    imagePath: 'https://app.optimizely.com/static/img/x/empty-states/page-list-empty-state.svg'\n\t  })]\n\t}]; /* eslint-disable react/jsx-key */\n\t\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 307:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar EmptyDashboard = function EmptyDashboard(_ref) {\n\t  var button = _ref.button,\n\t      imagePath = _ref.imagePath,\n\t      headline = _ref.headline,\n\t      description = _ref.description,\n\t      descriptionMaxWidth = _ref.descriptionMaxWidth,\n\t      testSection = _ref.testSection;\n\t\n\t  return _react2.default.createElement(\n\t    'div',\n\t    {\n\t      'data-oui-component': true,\n\t      className: 'flex overflow-y--scroll flex--1',\n\t      'data-test-section': 'layers-empty-state',\n\t      style: { width: '750px', margin: 'auto' } },\n\t    _react2.default.createElement(\n\t      'div',\n\t      { className: 'anchor--middle height--1-1 flex flex--column' },\n\t      _react2.default.createElement(\n\t        'div',\n\t        {\n\t          'data-ui-component': true,\n\t          className: 'text--center soft-quad',\n\t          'data-test-section': testSection },\n\t        imagePath && _react2.default.createElement(\n\t          'div',\n\t          {\n\t            className: 'muted push-double--bottom',\n\t            style: { width: '550px', margin: 'auto' } },\n\t          _react2.default.createElement('object', {\n\t            data: imagePath,\n\t            className: 'svg--non-scaling-stroke display--inline',\n\t            style: { maxWidth: '450px', maxHeight: '290px' },\n\t            'data-test-section': testSection && testSection + '-image',\n\t            alt: ''\n\t          })\n\t        ),\n\t        headline && _react2.default.createElement(\n\t          'h1',\n\t          {\n\t            className: 'alpha push--bottom',\n\t            'data-test-section': testSection && testSection + '-headline' },\n\t          headline\n\t        ),\n\t        description && _react2.default.createElement(\n\t          'div',\n\t          {\n\t            className: 'muted push--bottom anchor--middle',\n\t            style: { maxWidth: descriptionMaxWidth },\n\t            'data-test-section': testSection && testSection + '-description' },\n\t          description\n\t        ),\n\t        button && _react2.default.createElement(\n\t          'div',\n\t          { className: 'push-double--top' },\n\t          button\n\t        )\n\t      )\n\t    )\n\t  );\n\t};\n\t\n\tEmptyDashboard.propTypes = {\n\t  /** A button, link, or other element that is actionable */\n\t  button: _propTypes2.default.node,\n\t  /** A string or `div` containing longer text that describes the empty state */\n\t  description: _propTypes2.default.element,\n\t  /** Max width of description. Accepts any valid CSS width value. */\n\t  descriptionMaxWidth: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n\t  /** Short text about the empty state */\n\t  headline: _propTypes2.default.string.isRequired,\n\t  /** Path to an image representing the empty state */\n\t  imagePath: _propTypes2.default.string,\n\t  /** Identifier used to create data-test-section attributes for testing */\n\t  testSection: _propTypes2.default.string\n\t};\n\t\n\tEmptyDashboard.getDefaultProps = {\n\t  descriptionMaxWidth: '450px',\n\t  testSection: 'empty-hello'\n\t};\n\t\n\tmodule.exports = EmptyDashboard;\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-components-empty-dashboard-js-98fdc4d291b3e21dc5b2.js","\n  import React from 'react';\n  import ComponentContent from '../../layouts/templates/ComponentContent';\n\n   import examples from '../../../../src/components/EmptyDashboard/example'; import readme from 'raw-loader!../../../../src/components/EmptyDashboard/README.md';\n\n  const sassData = null;\n  const reactData = {\"description\":\"\",\"methods\":[],\"props\":{\"button\":{\"type\":{\"name\":\"node\"},\"required\":false,\"description\":\"A button, link, or other element that is actionable\"},\"description\":{\"type\":{\"name\":\"element\"},\"required\":false,\"description\":\"A string or `div` containing longer text that describes the empty state\"},\"descriptionMaxWidth\":{\"type\":{\"name\":\"union\",\"value\":[{\"name\":\"string\"},{\"name\":\"number\"}]},\"required\":false,\"description\":\"Max width of description. Accepts any valid CSS width value.\",\"defaultValue\":{\"value\":\"'450px'\",\"computed\":false}},\"headline\":{\"type\":{\"name\":\"string\"},\"required\":true,\"description\":\"Short text about the empty state\"},\"imagePath\":{\"type\":{\"name\":\"string\"},\"required\":false,\"description\":\"Path to an image representing the empty state\"},\"testSection\":{\"type\":{\"name\":\"string\"},\"required\":false,\"description\":\"Identifier used to create data-test-section attributes for testing\",\"defaultValue\":{\"value\":\"'empty-hello'\",\"computed\":false}}},\"private\":false};\n\n  let dataObject = {\n    react: reactData, \n    examples: examples ? examples : null,\n    readme: readme ? readme : null,\n    sass: sassData,\n  }\n  \n  class EmptyDashboardComponent extends React.Component {\n  \n    render() {\n      return (\n        <ComponentContent data={ dataObject } />\n      );\n    };\n  }\n  \n  export default EmptyDashboardComponent\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/components/EmptyDashboard.js","module.exports = \"# EmptyDashboard Component\\n\\n## Empty states\\nUsers encounter empty states the first time they use our products or a new feature. It’s our opportunity to educate and delight our customers, as well as alleviate their fears and anxieties.\\n\\nA good empty state will inform people what this page is, why they should care, and what their next step should be. Linking to educational content, such as Knowledge Base articles and blog posts, is a great way to make our customers successful. Finally, a good empty state should also have an illustrated graphic to visually explain what the feature does, and save the screen from being just text.\\n\\nA poor empty state, on the other hand, is one that is just blank, or simply tells the user there is no data.\\n\\n## Good Example\\n\\n![alt text](http://design.optimizely.com/assets/img/design-patterns/product/empty-states/example-good.png \\\"empty state example\\\")\\n\\nThe empty Campaigns screen welcomes people to Optimizely Personalization with an illustration, briefly explains what a campaign is, and provides a call-to-action to create a campaign.\\n\\n![alt text] (http://design.optimizely.com/assets/img/design-patterns/product/empty-states/example-sidebar.png \\\"empty state example\\\")\\n\\nSidebars should also have an empty state that explains what the feature does, what the user's next step is, and an illustration.\\n\\n## Bad Example \\n\\n![alt text] (http://design.optimizely.com/assets/img/design-patterns/product/empty-states/example-bad.png \\\"bad example\\\")\\n\\nThe empty state of the Uploaded Lists feature is poor for many reasons. First, it simply states that the user has 0 lists and is using 0 bytes of space. This is dry and not helpful. Second, it states, “No uploaded lists match your filters. Try clearing them to see all of your uploaded lists.” This statement is incorrect and confusing because the user isn’t filtering anything — there simply aren't any lists uploaded yet. The sidebar tells people to select a list, but there aren’t any lists to select. Finally, there’s a missed opportunity to educate users about what this feature is, how to use it, and why they should use it.\\n\\n## Oui React *EmptyDashboard* Component\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!../src/components/EmptyDashboard/README.md\n// module id = 637\n// module chunks = 147442823180344","/* eslint-disable react/jsx-key */\nimport React from 'react';\nimport Button from '../../Button/';\nimport EmptyDashboard from '../index';\n\nexport default [\n  {\n    isPadded: true,\n    examples: [\n      <EmptyDashboard\n        headline='Get started with Optimizely X'\n        description={ <div>This is a test description about with a Google.</div> }\n        button={ (<Button style=\"highlight\">Highlight</Button>) }\n        imagePath='https://app.optimizely.com/static/img/x/empty-states/campaign-list-empty-state.svg'\n      />,\n    ],\n  },\n\n  {\n    isPadded: true,\n    examples: [\n      <EmptyDashboard\n        headline='Get started with Optimizely X Extensions'\n        description={ <div>This is a test description about with a Google.</div> }\n        button={ (<Button style=\"highlight\">Highlight</Button>) }\n        imagePath='https://app.optimizely.com/static/img/x/empty-states/extensions-empty-state.svg'\n      />,\n    ],\n  },\n\n  {\n    isPadded: true,\n    examples: [\n      <EmptyDashboard\n        headline='Get started with Optimizely X'\n        description={ <div>This is a test description about with a Google.</div> }\n        button={ (<Button style=\"highlight\">Highlight</Button>) }\n        imagePath='https://app.optimizely.com/static/img/x/empty-states/custom-project-experiments-empty-state.svg'\n      />,\n    ],\n  },\n\n  {\n    isPadded: true,\n    examples: [\n      <EmptyDashboard\n        headline='Get started with Optimizely X'\n        description={ <div>This is a test description about with a Google.</div> }\n        button={ (<Button style=\"highlight\">Highlight</Button>) }\n        imagePath='https://app.optimizely.com/static/img/x/empty-states/empty-rollouts.svg'\n      />,\n    ],\n  },\n\n  {\n    isPadded: true,\n    examples: [\n      <EmptyDashboard\n        headline='Get started with Optimizely X'\n        description={ <div>This is a test description about with a Google.</div> }\n        button={ (<Button style=\"highlight\">Highlight</Button>) }\n        imagePath='https://app.optimizely.com/static/img/x/empty-states/empty-feature-flags.svg'\n      />,\n    ],\n  },\n\n  {\n    isPadded: true,\n    examples: [\n      <EmptyDashboard\n        headline='Get started with Optimizely X'\n        description={ <div>This is a test description about with a Google.</div> }\n        button={ (<Button style=\"highlight\">Highlight</Button>) }\n        imagePath='https://app.optimizely.com/static/img/x/empty-states/audience-list-empty-state.svg'\n      />,\n    ],\n  },\n\n  {\n    isPadded: true,\n    examples: [\n      <EmptyDashboard\n        headline='Get started with Optimizely X'\n        description={ <div>This is a test description about with a Google.</div> }\n        button={ (<Button style=\"highlight\">Highlight</Button>) }\n        imagePath='https://app.optimizely.com/static/img/x/empty-states/attribute-dashboard-empty-state.svg'\n      />,\n    ],\n  },\n\n  {\n    isPadded: true,\n    examples: [\n      <EmptyDashboard\n        headline='Get started with Optimizely X'\n        description={ <div>This is a test description about with a Google.</div> }\n        button={ (<Button style=\"highlight\">Highlight</Button>) }\n        imagePath='https://app.optimizely.com/static/img/x/empty-states/page-list-empty-state.svg'\n      />,\n    ],\n  },\n\n];\n\n\n\n// WEBPACK FOOTER //\n// ../src/components/EmptyDashboard/example/index.js","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst EmptyDashboard = ({\n  button,\n  imagePath,\n  headline,\n  description,\n  descriptionMaxWidth,\n  testSection,\n}) => {\n  return (\n    <div\n      data-oui-component={ true }\n      className='flex overflow-y--scroll flex--1'\n      data-test-section='layers-empty-state'\n      style={{ width: '750px', margin: 'auto' }}>\n      <div className='anchor--middle height--1-1 flex flex--column'>\n\n        <div\n          data-ui-component={ true }\n          className='text--center soft-quad'\n          data-test-section={ testSection }>\n\n          { imagePath && (\n            <div\n              className=\"muted push-double--bottom\"\n              style={{ width: '550px', margin: 'auto' }}>\n              <object\n                data={ imagePath }\n                className=\"svg--non-scaling-stroke display--inline\"\n                style={{ maxWidth: '450px', maxHeight: '290px' }}\n                data-test-section={ testSection && `${testSection}-image` }\n                alt=\"\"\n              />\n            </div>\n          ) }\n\n          { headline && (\n            <h1\n              className=\"alpha push--bottom\"\n              data-test-section={ testSection && `${testSection}-headline` }>\n              { headline }\n            </h1>\n          ) }\n\n          { description && (\n            <div\n              className=\"muted push--bottom anchor--middle\"\n              style={{ maxWidth: descriptionMaxWidth }}\n              data-test-section={ testSection && `${testSection}-description` }>\n              { description }\n            </div>\n          ) }\n\n          { button && (\n            <div className=\"push-double--top\">\n              { button }\n            </div>\n          ) }\n        </div>\n\n      </div>\n    </div>\n  );\n};\n\nEmptyDashboard.propTypes = {\n  /** A button, link, or other element that is actionable */\n  button: PropTypes.node,\n  /** A string or `div` containing longer text that describes the empty state */\n  description: PropTypes.element,\n  /** Max width of description. Accepts any valid CSS width value. */\n  descriptionMaxWidth: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  /** Short text about the empty state */\n  headline: PropTypes.string.isRequired,\n  /** Path to an image representing the empty state */\n  imagePath: PropTypes.string,\n  /** Identifier used to create data-test-section attributes for testing */\n  testSection: PropTypes.string,\n};\n\nEmptyDashboard.getDefaultProps = {\n  descriptionMaxWidth: '450px',\n  testSection: 'empty-hello',\n};\n\nmodule.exports = EmptyDashboard;\n\n\n\n// WEBPACK FOOTER //\n// ../src/components/EmptyDashboard/index.js"],"sourceRoot":""}