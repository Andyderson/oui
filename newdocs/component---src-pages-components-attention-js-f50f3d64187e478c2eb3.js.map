{"version":3,"sources":["webpack:///component---src-pages-components-attention-js-f50f3d64187e478c2eb3.js","webpack:///./src/pages/components/Attention.js","webpack:///../src/components/Attention/README.md","webpack:///../src/components/Attention/example/index.js","webpack:///../src/components/Attention/index.js","webpack:///../src/utils/accessibility.js"],"names":["webpackJsonp","239","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_react","_react2","_ComponentContent","_ComponentContent2","_example","_example2","_README","_README2","sassData","name","description","start","line","column","end","example","type","code","reactData","methods","props","alignment","computed","required","defaultValue","children","isDismissible","testSection","private","dataObject","react","examples","readme","sass","AttentionComponent","_React$Component","this","apply","arguments","render","createElement","data","Component","626","284","_index","_index2","285","_propTypes","_propTypes2","_Button","_Button2","_reactOuiIcons","_reactOuiIcons2","_classnames","_classnames2","_accessibility","renderDismissButton","className","style","size","ariaLabel","Attention","_ref","_classNames","_ref$alignment","undefined","_ref$type","colorClassName","alignmentClassName","attentionAriaLabel","getAssistiveTextFromColorClass","alignClass","trim","classes","dismissBtn","data-oui-component","data-test-section","aria-label","role","propTypes","oneOf","oneOfType","string","node","isRequired","bool","341","classMapping","bad-news","brand","good-news","warning","text","Error"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,EAASC,GAEhC,YAoBA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAEvF,QAASG,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASC,GAA2BC,EAAMC,GAAQ,IAAKD,EAAQ,KAAM,IAAIE,gBAAe,4DAAgE,QAAOD,GAAyB,gBAATA,IAAqC,kBAATA,GAA8BD,EAAPC,EAElO,QAASE,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAIP,WAAU,iEAAoEO,GAAeD,GAASE,UAAYC,OAAOC,OAAOH,GAAcA,EAAWC,WAAaG,aAAeC,MAAON,EAAUO,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeR,IAAYE,OAAOO,eAAiBP,OAAOO,eAAeV,EAAUC,GAAcD,EAASW,UAAYV,GAxBjehB,EAAQI,YAAa,CCNpB,IAAAuB,GAAA1B,EAAA,GDUG2B,EAAU1B,EAAuByB,GCTpCE,EAAA5B,EAAA,GDaG6B,EAAqB5B,EAAuB2B,GCX9CE,EAAA9B,EAAA,KDeE+B,EAAY9B,EAAuB6B,GCfgCE,EAAAhC,EAAA,KDmBnEiC,EAAWhC,EAAuB+B,GCjB/BE,GAAYC,KAAO,cAAcC,YAAc,4DAA4DC,OAASC,KAAO,EAAEC,OAAS,GAAGC,KAAOF,KAAO,GAAGC,OAAS,GAAGE,UAAYC,KAAO,OAAON,YAAc,oDAAoDO,KAAO,6EAA+ED,KAAO,OAAON,YAAc,kDAAkDO,KAAO,4QAA8QD,KAAO,OAAON,YAAc,kDAAkDO,KAAO,6KAAmLD,KAAO,OAAON,YAAc,8BAA8BO,KAAO,iGAAmGD,KAAO,OAAON,YAAc,gCAAgCO,KAAO,mGAAqGD,KAAO,OAAON,YAAc,gCAAgCO,KAAO,qGAAuGD,KAAO,OAAON,YAAc,8BAA8BO,KAAO,qGAC1/CC,GAAaR,YAAc,gHAAgHS,WAAaC,OAASC,WAAaL,MAAQP,KAAO,OAAOf,QAAUA,MAAQ,SAAS4B,UAAW,IAAQ5B,MAAQ,WAAW4B,UAAW,KAASC,UAAW,EAAMb,YAAc,0BAA0Bc,cAAgB9B,MAAQ,SAAS4B,UAAW,IAAQG,UAAYT,MAAQP,KAAO,QAAQf,QAAUe,KAAO,WAAWA,KAAO,UAAUc,UAAW,EAAKb,YAAc,0CAA0CgB,eAAiBV,MAAQP,KAAO,QAAQc,UAAW,EAAMb,YAAc,kDAAkDiB,aAAeX,MAAQP,KAAO,UAAUc,UAAW,EAAMb,YAAc,uCAAuCM,MAAQA,MAAQP,KAAO,OAAOf,QAAUA,MAAQ,aAAa4B,UAAW,IAAQ5B,MAAQ,UAAU4B,UAAW,IAAQ5B,MAAQ,cAAc4B,UAAW,IAAQ5B,MAAQ,YAAY4B,UAAW,KAASC,UAAW,EAAMb,YAAc,wBAAwBc,cAAgB9B,MAAQ,UAAU4B,UAAW,KAASM,SAAU,GAEpkCC,GACFC,MAAOZ,EACPa,SAAU1B,EAAA3B,QAAA2B,EAAA3B,QAAsB,KAChCsD,OAAQzB,EAAA7B,QAAA6B,EAAA7B,QAAkB,KAC1BuD,KAAMzB,GAGF0B,ED2BkB,SAAUC,GAGjC,QAASD,KAGP,MAFAvD,GAAgByD,KAAMF,GAEfnD,EAA2BqD,KAAMD,EAAiBE,MAAMD,KAAME,YAOvE,MAZAnD,GAAU+C,EAAoBC,GAQ9BD,EAAmB5C,UClClBiD,ODkCqC,WCjCnC,MACEtC,GAAAvB,QAAA8D,cAAArC,EAAAzB,SAAkB+D,KAAOZ,KDoCvBK,GCxCyBjC,EAAAvB,QAAMgE,UD2CxCrE,GAAQK,QClCQwD,EDmChB9D,EAAOC,QAAUA,EAAiB,SAI7BsE,IACA,SAAUvE,EAAQC,GEjExBD,EAAAC,QAAA,2lGFuEMuE,IACA,SAAUxE,EAAQC,EAASC,GAEhC,YAYA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAVvFH,EAAQI,YAAa,CG3EtB,IAAAuB,GAAA1B,EAAA,GH+EK2B,EAAU1B,EAAuByB,GG9EtC6C,EAAAvE,EAAA,KHkFKwE,EAAUvE,EAAuBsE,EAKrCxE,GAAQK,UGnFLqD,UACE9B,EAAAvB,QAAA8D,cAAAM,EAAApE,SACEgD,eAAgB,EAChBL,UAAU,SACVL,KAAK,UACLW,YAAY,iBAJd,4CAUFI,UACE9B,EAAAvB,QAAA8D,cAAAM,EAAApE,SAAW2C,UAAU,OAAOL,KAAK,YAAjC,4CAMFe,UACE9B,EAAAvB,QAAA8D,cAAAM,EAAApE,SAAWsC,KAAK,SAAhB,4CAMFe,UACE9B,EAAAvB,QAAA8D,cAAAM,EAAApE,SAAWsC,KAAK,aAAhB,4CAMFe,UACE9B,EAAAvB,QAAA8D,cAAAM,EAAApE,SAAWsC,KAAK,WAAhB,4CAMFe,UACE9B,EAAAvB,QAAA8D,cAAAM,EAAApE,SAAW2C,UAAU,UAArB,4CHoFLjD,EAAOC,QAAUA,EAAiB,SAI7B0E,IACA,SAAU3E,EAAQC,EAASC,GAEhC,YA0BA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAxBvFH,EAAQI,YAAa,CI3ItB,IAAAuB,GAAA1B,EAAA,GJ+IK2B,EAAU1B,EAAuByB,GI9ItCgD,EAAA1E,EAAA,GJkJK2E,EAAc1E,EAAuByE,GIjJ1CE,EAAA5E,EAAA,IJqJK6E,EAAW5E,EAAuB2E,GIpJvCE,EAAA9E,EAAA,IJwJK+E,EAAkB9E,EAAuB6E,GIvJ9CE,EAAAhF,EAAA,GJ2JKiF,EAAehF,EAAuB+E,GI1J3CE,EAAAlF,EAAA,KAEMmF,EAAsB,SAAC9B,GAC3B,MACE1B,GAAAvB,QAAA8D,cAAA,OAAKkB,UAAU,wBACbzD,EAAAvB,QAAA8D,cAAAW,EAAAzE,SACEiF,MAAM,QACNC,KAAK,QACLC,UAAU,cACVlC,YAAiBA,EAAjB,YACA1B,EAAAvB,QAAA8D,cAAAa,EAAA3E,SAAM+B,KAAK,QAAQmD,KAAK,aAa1BE,EAAY,SAAAC,GAMZ,GAAAC,GAAAC,EAAAF,EALJ1C,YAKI6C,SAAAD,EALQ,OAKRA,EAJJxC,EAIIsC,EAJJtC,SACAC,EAGIqC,EAHJrC,cACAC,EAEIoC,EAFJpC,YAEIwC,EAAAJ,EADJ/C,OACIkD,SAAAC,EADG,QACHA,EACEC,oBAAmCpD,EACnCqD,eAAkChD,EAClCiD,GAAqB,EAAAd,EAAAe,gCAA+BvD,GACpDwD,GAAa,iBAAiBJ,EAAjB,IAAmCC,GAAqBI,OACrEC,GAAU,EAAAnB,EAAA7E,UAAAsF,OAAA,GACVQ,IAAe,EADLR,IAGVW,EAAajD,EAAgB+B,EAAoB9B,GAAe,IAEtE,OACE1B,GAAAvB,QAAA8D,cAAA,OACEoC,sBAAqB,EACrBlB,UAAYgB,EACZG,oBAAoBlD,EACpBmD,aAAaR,EACbS,KAAK,SACHtD,EACAkD,GAKRb,GAAUkB,WAER3D,UAAW4B,EAAAvE,QAAUuG,OAAO,OAAQ,WAEpCxD,SAAUwB,EAAAvE,QAAUwG,WAAWjC,EAAAvE,QAAUyG,OAAQlC,EAAAvE,QAAU0G,OAAOC,WAElE3D,cAAeuB,EAAAvE,QAAU4G,KAEzB3D,YAAasB,EAAAvE,QAAUyG,OAEvBnE,KAAMiC,EAAAvE,QAAUuG,OAAO,WAAY,QAAS,YAAa,aJqK1D5G,EAAQK,QIlKMoF,EJmKd1F,EAAOC,QAAUA,EAAiB,SAI7BkH,IACA,SAAUnH,EAAQC,GAEvB,YAEAA,GAAQI,YAAa,CK5OT8F,kCAAiC,SAACb,GAC7C,GAAM8B,IACJC,WAAY,QACZC,MAAS,OACTC,YAAa,UACbC,QAAW,SAGTC,EAAOL,EAAa9B,EAExB,KAAKmC,EACH,KAAM,IAAIC,OAAM,8CAGlB,OAAOD","file":"component---src-pages-components-attention-js-f50f3d64187e478c2eb3.js","sourcesContent":["webpackJsonp([263385666868464],{\n\n/***/ 239:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _ComponentContent = __webpack_require__(5);\n\t\n\tvar _ComponentContent2 = _interopRequireDefault(_ComponentContent);\n\t\n\tvar _example = __webpack_require__(284);\n\t\n\tvar _example2 = _interopRequireDefault(_example);\n\t\n\tvar _README = __webpack_require__(626);\n\t\n\tvar _README2 = _interopRequireDefault(_README);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar sassData = { \"name\": \"Attention\\n\", \"description\": \"Boxes for highlighting important information or warnings.\", \"start\": { \"line\": 1, \"column\": 1 }, \"end\": { \"line\": 36, \"column\": 4 }, \"example\": [{ \"type\": \"html\", \"description\": \"Default colored attention bar with little content\", \"code\": \"<div class=\\\"oui-attention oui-text--center\\\">\\n   This is a note.\\n</div>\" }, { \"type\": \"html\", \"description\": \"Default colored attention bar with long content\", \"code\": \"<div class=\\\"oui-attention\\\">\\n   This is a longer note adipisicing elit. Recusandae ipsum tenetur est quisquam beatae aliquam facere molestiae re endis aperiam molestias consequuntur voluptatum corporis voluptas laudantium dolor, nam quam laboriosam harum.\\n</div>\" }, { \"type\": \"html\", \"description\": \"Default colored attention bar with close button\", \"code\": \"<div class=\\\"oui-attention oui-text--center\\\">\\n  <svg class=\\\"oui-icon oui-attention__close\\\">\\n    <use xlink:href=\\\"#close-16\\\"></use>\\n  </svg>\\n  This is a note.\\n</div>\" }, { \"type\": \"html\", \"description\": \"Brand colored attention bar\", \"code\": \"<div class=\\\"oui-attention oui-attention--brand oui-text--center\\\">\\n  This is a note.\\n</div>\" }, { \"type\": \"html\", \"description\": \"Warning colored attention bar\", \"code\": \"<div class=\\\"oui-attention oui-attention--warning oui-text--center\\\">\\n  This is a note.\\n</div>\" }, { \"type\": \"html\", \"description\": \"Success colored attention bar\", \"code\": \"<div class=\\\"oui-attention oui-attention--good-news oui-text--center\\\">\\n  This is a note.\\n</div>\" }, { \"type\": \"html\", \"description\": \"Error colored attention bar\", \"code\": \"<div class=\\\"oui-attention oui-attention--bad-news oui-text--center\\\">\\n  This is a note.\\n</div>\" }] };\n\tvar reactData = { \"description\": \"Provide contextual feedback with a wide range of styles that can be used to\\nconvey the message's importance.\", \"methods\": [], \"props\": { \"alignment\": { \"type\": { \"name\": \"enum\", \"value\": [{ \"value\": \"'left'\", \"computed\": false }, { \"value\": \"'center'\", \"computed\": false }] }, \"required\": false, \"description\": \"How the text is aligned\", \"defaultValue\": { \"value\": \"'left'\", \"computed\": false } }, \"children\": { \"type\": { \"name\": \"union\", \"value\": [{ \"name\": \"string\" }, { \"name\": \"node\" }] }, \"required\": true, \"description\": \"Text that appears within the component\" }, \"isDismissible\": { \"type\": { \"name\": \"bool\" }, \"required\": false, \"description\": \"Button allowing users to dismiss the component\" }, \"testSection\": { \"type\": { \"name\": \"string\" }, \"required\": false, \"description\": \"Hook for automated JavaScript tests\" }, \"type\": { \"type\": { \"name\": \"enum\", \"value\": [{ \"value\": \"'bad-news'\", \"computed\": false }, { \"value\": \"'brand'\", \"computed\": false }, { \"value\": \"'good-news'\", \"computed\": false }, { \"value\": \"'warning'\", \"computed\": false }] }, \"required\": false, \"description\": \"Various color schemes\", \"defaultValue\": { \"value\": \"'brand'\", \"computed\": false } } }, \"private\": false };\n\t\n\tvar dataObject = {\n\t  react: reactData,\n\t  examples: _example2.default ? _example2.default : null,\n\t  readme: _README2.default ? _README2.default : null,\n\t  sass: sassData\n\t};\n\t\n\tvar AttentionComponent = function (_React$Component) {\n\t  _inherits(AttentionComponent, _React$Component);\n\t\n\t  function AttentionComponent() {\n\t    _classCallCheck(this, AttentionComponent);\n\t\n\t    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n\t  }\n\t\n\t  AttentionComponent.prototype.render = function render() {\n\t    return _react2.default.createElement(_ComponentContent2.default, { data: dataObject });\n\t  };\n\t\n\t  return AttentionComponent;\n\t}(_react2.default.Component);\n\t\n\texports.default = AttentionComponent;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 626:\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"# Notifications\\nUse notifications to alert users about changes in the product, such as completed actions and new feature announcements.\\n\\n## Notification Types\\nThere are 3 types of notifications: attention bars, alert boxes, and notification tray messages.\\n\\nOUI docs for attention bars and alert boxes\\n\\n### Attention Bars\\nUse an attention bar for important announcements, such as critical bugs, warnings, and service impairments. This bar sits above the global navigation and there cannot be more than 1 at a time. Thus, use them judiciously. Since they aren't dismissable with an \\\"x\\\", add a call to action button at the end of the message (e.g. \\\"Learn More\\\").\\n\\nMessages should be 1 or 2 sentences long, and not break onto multiple lines.\\n\\nAttention bars can be styled as brand, warning, good news, or error.\\n\\n### _Do_\\n![alt text](http://design.optimizely.com/assets/img/design-patterns/product/notifications/attention-do.png \\\"example of notification component\\\")\\n\\n### _Don't_\\n![alt text](http://design.optimizely.com/assets/img/design-patterns/product/notifications/attention-dont.png \\\"example of notification component\\\")\\n\\n*The messages' tone doesn't match the visual style (friendly vs. error). In the bottom two, the button's styles don't match the alert's styles.*\\n\\n**Editor Attention Bar**\\nUse the editor attention bar to alert users to system state of the editor. Most commonly, this refers to the compatibility mode and SDK upgrade messages. Unlike the main attention bar, this one is dismissable.\\n\\n### Alert Boxes\\nUse alert boxes to display information about the system state inline, such as successfully saving settings, archiving an experiment, or the number of segmentable audiences a person is using.\\n\\nThese messages take two forms. First, they appear and disappear automatically in response to user actions. This is the case in the settings panel, for example. Second, they can appear statically in dialogs or above tables to alert users to special information, such as the number of experiments an audience is used in.\\n\\nAlert boxes can be styled as **brand**, **warning**, **success**, or **error**.\\n\\n![alt text](http://design.optimizely.com/assets/img/design-patterns/product/notifications/attention-3.png \\\"example of alert boxes\\\")\\n\\n# Notification Tray Messages\\nUse notification tray messages to tell users about non-critical information, such as new features, beta releases, account changes, project or experiment changes, and results. The messages should be short, clear, and direct users to take action (e.g. \\\"Read the blog post announcing this feature\\\").\\n\\nDo not spam users with notifications. Only add messages that are relevant and useful. If a source of messages would flood a person's tray, you probably shouldn't add it to the notification tray. Overflowing the notification tray **devalues all messages** in the tray, and undermines the usefulness of the tray.\\n\\nNote: this section needs to be fleshed out with more information about message icons.\\n\\n![alt text](http://design.optimizely.com/assets/img/design-patterns/product/notifications/tray-messages.png \\\"example of alert messages\\\")\"\n\n/***/ }),\n\n/***/ 284:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _index = __webpack_require__(285);\n\t\n\tvar _index2 = _interopRequireDefault(_index);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/* eslint-disable react/jsx-key */\n\texports.default = [{\n\t  examples: [_react2.default.createElement(\n\t    _index2.default,\n\t    {\n\t      isDismissible: true,\n\t      alignment: 'center',\n\t      type: 'warning',\n\t      testSection: 'attention-foo' },\n\t    'Hello! This is a short attention bar.'\n\t  )]\n\t}, {\n\t  examples: [_react2.default.createElement(\n\t    _index2.default,\n\t    { alignment: 'left', type: 'bad-news' },\n\t    'Hello! This is a short attention bar.'\n\t  )]\n\t}, {\n\t  examples: [_react2.default.createElement(\n\t    _index2.default,\n\t    { type: 'brand' },\n\t    'Hello! This is a short attention bar.'\n\t  )]\n\t}, {\n\t  examples: [_react2.default.createElement(\n\t    _index2.default,\n\t    { type: 'good-news' },\n\t    'Hello! This is a short attention bar.'\n\t  )]\n\t}, {\n\t  examples: [_react2.default.createElement(\n\t    _index2.default,\n\t    { type: 'warning' },\n\t    'Hello! This is a short attention bar.'\n\t  )]\n\t}, {\n\t  examples: [_react2.default.createElement(\n\t    _index2.default,\n\t    { alignment: 'center' },\n\t    'Hello! This is a short attention bar.'\n\t  )]\n\t}];\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 285:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _Button = __webpack_require__(15);\n\t\n\tvar _Button2 = _interopRequireDefault(_Button);\n\t\n\tvar _reactOuiIcons = __webpack_require__(28);\n\t\n\tvar _reactOuiIcons2 = _interopRequireDefault(_reactOuiIcons);\n\t\n\tvar _classnames = __webpack_require__(9);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tvar _accessibility = __webpack_require__(341);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar renderDismissButton = function renderDismissButton(testSection) {\n\t  return _react2.default.createElement(\n\t    'div',\n\t    { className: 'oui-attention__close' },\n\t    _react2.default.createElement(\n\t      _Button2.default,\n\t      {\n\t        style: 'plain',\n\t        size: 'small',\n\t        ariaLabel: 'Close alert',\n\t        testSection: testSection + '-dismiss' },\n\t      _react2.default.createElement(_reactOuiIcons2.default, { name: 'close', size: 'small' })\n\t    )\n\t  );\n\t};\n\t\n\t/**\n\t * Provide contextual feedback with a wide range of styles that can be used to\n\t * convey the message's importance.\n\t * @param {Object} props - Properties passed to component\n\t * @returns {ReactElement}\n\t */\n\t\n\tvar Attention = function Attention(_ref) {\n\t  var _classNames;\n\t\n\t  var _ref$alignment = _ref.alignment,\n\t      alignment = _ref$alignment === undefined ? 'left' : _ref$alignment,\n\t      children = _ref.children,\n\t      isDismissible = _ref.isDismissible,\n\t      testSection = _ref.testSection,\n\t      _ref$type = _ref.type,\n\t      type = _ref$type === undefined ? 'brand' : _ref$type;\n\t\n\t  var colorClassName = 'oui-attention--' + type;\n\t  var alignmentClassName = 'oui-text--' + alignment;\n\t  var attentionAriaLabel = (0, _accessibility.getAssistiveTextFromColorClass)(type);\n\t  var alignClass = ('oui-attention ' + colorClassName + ' ' + alignmentClassName).trim();\n\t  var classes = (0, _classnames2.default)((_classNames = {}, _classNames['' + alignClass] = true, _classNames));\n\t  var dismissBtn = isDismissible ? renderDismissButton(testSection) : null;\n\t\n\t  return _react2.default.createElement(\n\t    'div',\n\t    {\n\t      'data-oui-component': true,\n\t      className: classes,\n\t      'data-test-section': testSection,\n\t      'aria-label': attentionAriaLabel,\n\t      role: 'alert' },\n\t    children,\n\t    dismissBtn\n\t  );\n\t};\n\t\n\tAttention.propTypes = {\n\t  /** How the text is aligned */\n\t  alignment: _propTypes2.default.oneOf(['left', 'center']),\n\t  /** Text that appears within the component */\n\t  children: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node]).isRequired,\n\t  /** Button allowing users to dismiss the component */\n\t  isDismissible: _propTypes2.default.bool,\n\t  /** Hook for automated JavaScript tests */\n\t  testSection: _propTypes2.default.string,\n\t  /** Various color schemes */\n\t  type: _propTypes2.default.oneOf(['bad-news', 'brand', 'good-news', 'warning'])\n\t};\n\t\n\texports.default = Attention;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 341:\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t/**\n\t * Map a color class to a human readable word that explains the context of when\n\t * the class is used. This is helpful for screen readers.\n\t * @param {String} className - an OUI class\n\t * @returns {String} English word describing the class provided\n\t */\n\tvar getAssistiveTextFromColorClass = exports.getAssistiveTextFromColorClass = function getAssistiveTextFromColorClass(className) {\n\t  var classMapping = {\n\t    'bad-news': 'Error',\n\t    'brand': 'Info',\n\t    'good-news': 'Success',\n\t    'warning': 'Alert'\n\t  };\n\t\n\t  var text = classMapping[className];\n\t\n\t  if (!text) {\n\t    throw new Error('Provided class name does not map to a word.');\n\t  }\n\t\n\t  return text;\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-components-attention-js-f50f3d64187e478c2eb3.js","\n  import React from 'react';\n  import ComponentContent from '../../layouts/templates/ComponentContent';\n\n   import examples from '../../../../src/components/Attention/example'; import readme from 'raw-loader!../../../../src/components/Attention/README.md';\n\n  const sassData = {\"name\":\"Attention\\n\",\"description\":\"Boxes for highlighting important information or warnings.\",\"start\":{\"line\":1,\"column\":1},\"end\":{\"line\":36,\"column\":4},\"example\":[{\"type\":\"html\",\"description\":\"Default colored attention bar with little content\",\"code\":\"<div class=\\\"oui-attention oui-text--center\\\">\\n   This is a note.\\n</div>\"},{\"type\":\"html\",\"description\":\"Default colored attention bar with long content\",\"code\":\"<div class=\\\"oui-attention\\\">\\n   This is a longer note adipisicing elit. Recusandae ipsum tenetur est quisquam beatae aliquam facere molestiae re endis aperiam molestias consequuntur voluptatum corporis voluptas laudantium dolor, nam quam laboriosam harum.\\n</div>\"},{\"type\":\"html\",\"description\":\"Default colored attention bar with close button\",\"code\":\"<div class=\\\"oui-attention oui-text--center\\\">\\n  <svg class=\\\"oui-icon oui-attention__close\\\">\\n    <use xlink:href=\\\"#close-16\\\"></use>\\n  </svg>\\n  This is a note.\\n</div>\"},{\"type\":\"html\",\"description\":\"Brand colored attention bar\",\"code\":\"<div class=\\\"oui-attention oui-attention--brand oui-text--center\\\">\\n  This is a note.\\n</div>\"},{\"type\":\"html\",\"description\":\"Warning colored attention bar\",\"code\":\"<div class=\\\"oui-attention oui-attention--warning oui-text--center\\\">\\n  This is a note.\\n</div>\"},{\"type\":\"html\",\"description\":\"Success colored attention bar\",\"code\":\"<div class=\\\"oui-attention oui-attention--good-news oui-text--center\\\">\\n  This is a note.\\n</div>\"},{\"type\":\"html\",\"description\":\"Error colored attention bar\",\"code\":\"<div class=\\\"oui-attention oui-attention--bad-news oui-text--center\\\">\\n  This is a note.\\n</div>\"}]};\n  const reactData = {\"description\":\"Provide contextual feedback with a wide range of styles that can be used to\\nconvey the message's importance.\",\"methods\":[],\"props\":{\"alignment\":{\"type\":{\"name\":\"enum\",\"value\":[{\"value\":\"'left'\",\"computed\":false},{\"value\":\"'center'\",\"computed\":false}]},\"required\":false,\"description\":\"How the text is aligned\",\"defaultValue\":{\"value\":\"'left'\",\"computed\":false}},\"children\":{\"type\":{\"name\":\"union\",\"value\":[{\"name\":\"string\"},{\"name\":\"node\"}]},\"required\":true,\"description\":\"Text that appears within the component\"},\"isDismissible\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Button allowing users to dismiss the component\"},\"testSection\":{\"type\":{\"name\":\"string\"},\"required\":false,\"description\":\"Hook for automated JavaScript tests\"},\"type\":{\"type\":{\"name\":\"enum\",\"value\":[{\"value\":\"'bad-news'\",\"computed\":false},{\"value\":\"'brand'\",\"computed\":false},{\"value\":\"'good-news'\",\"computed\":false},{\"value\":\"'warning'\",\"computed\":false}]},\"required\":false,\"description\":\"Various color schemes\",\"defaultValue\":{\"value\":\"'brand'\",\"computed\":false}}},\"private\":false};\n\n  let dataObject = {\n    react: reactData, \n    examples: examples ? examples : null,\n    readme: readme ? readme : null,\n    sass: sassData,\n  }\n  \n  class AttentionComponent extends React.Component {\n  \n    render() {\n      return (\n        <ComponentContent data={ dataObject } />\n      );\n    };\n  }\n  \n  export default AttentionComponent\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/components/Attention.js","module.exports = \"# Notifications\\nUse notifications to alert users about changes in the product, such as completed actions and new feature announcements.\\n\\n## Notification Types\\nThere are 3 types of notifications: attention bars, alert boxes, and notification tray messages.\\n\\nOUI docs for attention bars and alert boxes\\n\\n### Attention Bars\\nUse an attention bar for important announcements, such as critical bugs, warnings, and service impairments. This bar sits above the global navigation and there cannot be more than 1 at a time. Thus, use them judiciously. Since they aren't dismissable with an \\\"x\\\", add a call to action button at the end of the message (e.g. \\\"Learn More\\\").\\n\\nMessages should be 1 or 2 sentences long, and not break onto multiple lines.\\n\\nAttention bars can be styled as brand, warning, good news, or error.\\n\\n### _Do_\\n![alt text](http://design.optimizely.com/assets/img/design-patterns/product/notifications/attention-do.png \\\"example of notification component\\\")\\n\\n### _Don't_\\n![alt text](http://design.optimizely.com/assets/img/design-patterns/product/notifications/attention-dont.png \\\"example of notification component\\\")\\n\\n*The messages' tone doesn't match the visual style (friendly vs. error). In the bottom two, the button's styles don't match the alert's styles.*\\n\\n**Editor Attention Bar**\\nUse the editor attention bar to alert users to system state of the editor. Most commonly, this refers to the compatibility mode and SDK upgrade messages. Unlike the main attention bar, this one is dismissable.\\n\\n### Alert Boxes\\nUse alert boxes to display information about the system state inline, such as successfully saving settings, archiving an experiment, or the number of segmentable audiences a person is using.\\n\\nThese messages take two forms. First, they appear and disappear automatically in response to user actions. This is the case in the settings panel, for example. Second, they can appear statically in dialogs or above tables to alert users to special information, such as the number of experiments an audience is used in.\\n\\nAlert boxes can be styled as **brand**, **warning**, **success**, or **error**.\\n\\n![alt text](http://design.optimizely.com/assets/img/design-patterns/product/notifications/attention-3.png \\\"example of alert boxes\\\")\\n\\n# Notification Tray Messages\\nUse notification tray messages to tell users about non-critical information, such as new features, beta releases, account changes, project or experiment changes, and results. The messages should be short, clear, and direct users to take action (e.g. \\\"Read the blog post announcing this feature\\\").\\n\\nDo not spam users with notifications. Only add messages that are relevant and useful. If a source of messages would flood a person's tray, you probably shouldn't add it to the notification tray. Overflowing the notification tray **devalues all messages** in the tray, and undermines the usefulness of the tray.\\n\\nNote: this section needs to be fleshed out with more information about message icons.\\n\\n![alt text](http://design.optimizely.com/assets/img/design-patterns/product/notifications/tray-messages.png \\\"example of alert messages\\\")\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!../src/components/Attention/README.md\n// module id = 626\n// module chunks = 263385666868464","/* eslint-disable react/jsx-key */\nimport React from 'react';\nimport Attention from '../index';\n\nexport default [\n  {\n    examples: [\n      <Attention\n        isDismissible={ true }\n        alignment=\"center\"\n        type=\"warning\"\n        testSection=\"attention-foo\">\n        Hello! This is a short attention bar.\n      </Attention>,\n    ],\n  },\n  {\n    examples: [\n      <Attention alignment=\"left\" type=\"bad-news\">\n        Hello! This is a short attention bar.\n      </Attention>,\n    ],\n  },\n  {\n    examples: [\n      <Attention type=\"brand\">\n        Hello! This is a short attention bar.\n      </Attention>,\n    ],\n  },\n  {\n    examples: [\n      <Attention type=\"good-news\">\n        Hello! This is a short attention bar.\n      </Attention>,\n    ],\n  },\n  {\n    examples: [\n      <Attention type=\"warning\">\n        Hello! This is a short attention bar.\n      </Attention>,\n    ],\n  },\n  {\n    examples: [\n      <Attention alignment=\"center\">\n        Hello! This is a short attention bar.\n      </Attention>,\n    ],\n  },\n];\n\n\n\n// WEBPACK FOOTER //\n// ../src/components/Attention/example/index.js","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../Button';\nimport Icon from 'react-oui-icons';\nimport classNames from 'classnames';\nimport { getAssistiveTextFromColorClass } from '../../utils/accessibility';\n\nconst renderDismissButton = (testSection) => {\n  return (\n    <div className=\"oui-attention__close\">\n      <Button\n        style=\"plain\"\n        size=\"small\"\n        ariaLabel=\"Close alert\"\n        testSection={ `${testSection}-dismiss` }>\n        <Icon name='close' size='small' />\n      </Button>\n    </div>\n  );\n};\n\n/**\n * Provide contextual feedback with a wide range of styles that can be used to\n * convey the message's importance.\n * @param {Object} props - Properties passed to component\n * @returns {ReactElement}\n */\n\nconst Attention = ({\n  alignment = 'left',\n  children,\n  isDismissible,\n  testSection,\n  type = 'brand',\n}) => {\n  const colorClassName = `oui-attention--${type}`;\n  const alignmentClassName = `oui-text--${alignment}`;\n  const attentionAriaLabel = getAssistiveTextFromColorClass(type);\n  const alignClass = `oui-attention ${colorClassName} ${alignmentClassName}`.trim();\n  const classes = classNames({\n    [`${alignClass}`]: true,\n  });\n  const dismissBtn = isDismissible ? renderDismissButton(testSection) : null;\n\n  return (\n    <div\n      data-oui-component={ true }\n      className={ classes }\n      data-test-section={ testSection }\n      aria-label={ attentionAriaLabel }\n      role=\"alert\">\n      { children }\n      { dismissBtn }\n    </div>\n  );\n};\n\nAttention.propTypes = {\n  /** How the text is aligned */\n  alignment: PropTypes.oneOf(['left', 'center']),\n  /** Text that appears within the component */\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).isRequired,\n  /** Button allowing users to dismiss the component */\n  isDismissible: PropTypes.bool,\n  /** Hook for automated JavaScript tests */\n  testSection: PropTypes.string,\n  /** Various color schemes */\n  type: PropTypes.oneOf(['bad-news', 'brand', 'good-news', 'warning']),\n};\n\nexport default Attention;\n\n\n\n// WEBPACK FOOTER //\n// ../src/components/Attention/index.js","/**\n * Map a color class to a human readable word that explains the context of when\n * the class is used. This is helpful for screen readers.\n * @param {String} className - an OUI class\n * @returns {String} English word describing the class provided\n */\nexport const getAssistiveTextFromColorClass = (className) => {\n  const classMapping = {\n    'bad-news': 'Error',\n    'brand': 'Info',\n    'good-news': 'Success',\n    'warning': 'Alert',\n  };\n\n  let text = classMapping[className];\n\n  if (!text) {\n    throw new Error('Provided class name does not map to a word.');\n  }\n\n  return text;\n};\n\n\n\n// WEBPACK FOOTER //\n// ../src/utils/accessibility.js"],"sourceRoot":""}