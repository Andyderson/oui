{"version":3,"sources":["webpack:///component---src-pages-components-progress-bar-js-63a72e3028abb1b9856b.js","webpack:///./src/pages/components/ProgressBar.js","webpack:///../src/components/ProgressBar/README.md","webpack:///../src/components/ProgressBar/example/index.js","webpack:///../src/components/ProgressBar/index.js"],"names":["webpackJsonp","263","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_react","_react2","_ComponentContent","_ComponentContent2","_example","_example2","_README","_README2","sassData","name","description","start","line","column","end","example","type","code","reactData","methods","props","displayError","required","defaultValue","computed","leftLabel","max","min","progress","rightLabel","topLabel","private","dataObject","react","examples","readme","sass","ProgressBarComponent","_React$Component","this","apply","arguments","render","createElement","data","Component","647","315","_index","_index2","316","_propTypes","_propTypes2","_classnames","_classnames2","_Label","_Label2","ProgressBar","_ref","_ref$displayError","undefined","_ref$max","_ref$min","ouiProgress","oui-progress--bad-news","range","allocated","Math","round","available","data-oui-component","className","style","width","aria-valuenow","aria-valuemin","aria-valuemax","propTypes","bool","string","oneOfType","number"],"mappings":"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","file":"component---src-pages-components-progress-bar-js-63a72e3028abb1b9856b.js","sourcesContent":["webpackJsonp([162314516919203],{\n\n/***/ 263:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _ComponentContent = __webpack_require__(5);\n\t\n\tvar _ComponentContent2 = _interopRequireDefault(_ComponentContent);\n\t\n\tvar _example = __webpack_require__(315);\n\t\n\tvar _example2 = _interopRequireDefault(_example);\n\t\n\tvar _README = __webpack_require__(647);\n\t\n\tvar _README2 = _interopRequireDefault(_README);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar sassData = { \"name\": \"Progress Bar\\n\", \"description\": \"Creates a progress bar.\", \"start\": { \"line\": 1, \"column\": 1 }, \"end\": { \"line\": 20, \"column\": 4 }, \"example\": [{ \"type\": \"html\", \"description\": null, \"code\": \"<div class=\\\"#{$namespace}progress\\\">\\n  <div class=\\\"#{$namespace}progress__bar\\\" style=\\\"width: 60%;\\\" aria-valuenow=\\\"60\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\">60%</div>\\n</div>\" }, { \"type\": \"html\", \"description\": null, \"code\": \"<div class=\\\"#{$namespace}progress\\\">\\n  <div class=\\\"#{$namespace}progress__bar\\\" style=\\\"width: 1%;\\\" aria-valuenow=\\\"1\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\">1%</div>\\n</div>\" }, { \"type\": \"html\", \"description\": null, \"code\": \"<div class=\\\"#{$namespace}progress\\\">\\n  <div class=\\\"#{$namespace}progress__bar\\\" style=\\\"width: 0%;\\\" aria-valuenow=\\\"0\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\">0%</div>\\n</div>\" }, { \"type\": \"html\", \"description\": null, \"code\": \"<div class=\\\"#{$namespace}progress #{$namespace}progress--bad-news\\\">\\n  <div class=\\\"#{$namespace}progress__bar\\\" style=\\\"width: 80%;\\\" aria-valuenow=\\\"80\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\">80%</div>\\n</div>\" }] };\n\tvar reactData = { \"description\": \"Generates an `ProgressBar` element\\nmost of the common input types.\", \"methods\": [], \"props\": { \"displayError\": { \"type\": { \"name\": \"bool\" }, \"required\": false, \"description\": \"badNews will change the progress bar color to red\", \"defaultValue\": { \"value\": \"false\", \"computed\": false } }, \"leftLabel\": { \"type\": { \"name\": \"string\" }, \"required\": false, \"description\": \"left label\" }, \"max\": { \"type\": { \"name\": \"union\", \"value\": [{ \"name\": \"number\" }, { \"name\": \"string\" }] }, \"required\": false, \"description\": \"max\", \"defaultValue\": { \"value\": \"100\", \"computed\": false } }, \"min\": { \"type\": { \"name\": \"union\", \"value\": [{ \"name\": \"number\" }, { \"name\": \"string\" }] }, \"required\": false, \"description\": \"min\", \"defaultValue\": { \"value\": \"0\", \"computed\": false } }, \"progress\": { \"type\": { \"name\": \"union\", \"value\": [{ \"name\": \"number\" }, { \"name\": \"string\" }] }, \"required\": false, \"description\": \"string data for progress\" }, \"rightLabel\": { \"type\": { \"name\": \"string\" }, \"required\": false, \"description\": \"right label\" }, \"topLabel\": { \"type\": { \"name\": \"string\" }, \"required\": false, \"description\": \"top label\" } }, \"private\": false };\n\t\n\tvar dataObject = {\n\t  react: reactData,\n\t  examples: _example2.default ? _example2.default : null,\n\t  readme: _README2.default ? _README2.default : null,\n\t  sass: sassData\n\t};\n\t\n\tvar ProgressBarComponent = function (_React$Component) {\n\t  _inherits(ProgressBarComponent, _React$Component);\n\t\n\t  function ProgressBarComponent() {\n\t    _classCallCheck(this, ProgressBarComponent);\n\t\n\t    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n\t  }\n\t\n\t  ProgressBarComponent.prototype.render = function render() {\n\t    return _react2.default.createElement(_ComponentContent2.default, { data: dataObject });\n\t  };\n\t\n\t  return ProgressBarComponent;\n\t}(_react2.default.Component);\n\t\n\texports.default = ProgressBarComponent;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 647:\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"# ProgressBar \\n## Progress Indicators\\nUse progress indicators to show the status of a task. Progress indicators come in two forms: finite and infinite.\\n\\n## Finite Progress Indicator\\nUse finite progress indicators to show the percentage of the task that's been completed. Use this only when you can accurately measure the progress of the task, such as when uploading a file.\"\n\n/***/ }),\n\n/***/ 315:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _index = __webpack_require__(316);\n\t\n\tvar _index2 = _interopRequireDefault(_index);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/* eslint-disable react/jsx-key */\n\texports.default = [{\n\t  examples: [_react2.default.createElement(_index2.default, {\n\t    max: '100',\n\t    min: '0',\n\t    progress: '60',\n\t    topLabel: 'hola esto es un label'\n\t  })]\n\t}, {\n\t  examples: [_react2.default.createElement(_index2.default, {\n\t    max: '80',\n\t    min: '0',\n\t    progress: '20'\n\t  })]\n\t}, {\n\t  examples: [_react2.default.createElement(_index2.default, {\n\t    leftLabel: 'Allocated traffic',\n\t    max: '250',\n\t    min: '0',\n\t    progress: '90',\n\t    rightLabel: 'Available traffic'\n\t  })]\n\t}, {\n\t  examples: [_react2.default.createElement(_index2.default, {\n\t    leftLabel: 'Allocated traffic',\n\t    min: '20',\n\t    max: '80',\n\t    progress: '30',\n\t    rightLabel: 'Available traffic',\n\t    topLabel: 'hola esto es un label'\n\t  })]\n\t}, {\n\t  examples: [_react2.default.createElement(_index2.default, {\n\t    displayError: true,\n\t    leftLabel: 'Allocated traffic',\n\t    min: '20',\n\t    max: '80',\n\t    progress: '30',\n\t    rightLabel: 'Available traffic',\n\t    topLabel: 'hola esto es un label'\n\t  })]\n\t}, {\n\t  examples: [_react2.default.createElement(_index2.default, {\n\t    displayError: true,\n\t    min: '0',\n\t    max: '100',\n\t    progress: '60'\n\t  })]\n\t}];\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 316:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _classnames = __webpack_require__(9);\n\t\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\t\n\tvar _Label = __webpack_require__(31);\n\t\n\tvar _Label2 = _interopRequireDefault(_Label);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Generates an `ProgressBar` element\n\t * most of the common input types.\n\t * @param {Object} props - Properties passed to component\n\t * @returns {ReactElement}\n\t */\n\t\n\tvar ProgressBar = function ProgressBar(_ref) {\n\t  var _ref$displayError = _ref.displayError,\n\t      displayError = _ref$displayError === undefined ? false : _ref$displayError,\n\t      leftLabel = _ref.leftLabel,\n\t      _ref$max = _ref.max,\n\t      max = _ref$max === undefined ? 100 : _ref$max,\n\t      _ref$min = _ref.min,\n\t      min = _ref$min === undefined ? 0 : _ref$min,\n\t      progress = _ref.progress,\n\t      rightLabel = _ref.rightLabel,\n\t      topLabel = _ref.topLabel;\n\t\n\t  var ouiProgress = (0, _classnames2.default)('oui-progress', { 'oui-progress--bad-news': displayError });\n\t\n\t  var range = max - min;\n\t  var allocated = Math.round(progress / range * 100);\n\t  var available = Math.round(100 - allocated);\n\t\n\t  return _react2.default.createElement(\n\t    'div',\n\t    { 'data-oui-component': true },\n\t    topLabel && _react2.default.createElement(\n\t      _Label2.default,\n\t      null,\n\t      topLabel\n\t    ),\n\t    _react2.default.createElement(\n\t      'div',\n\t      { className: ouiProgress },\n\t      _react2.default.createElement(\n\t        'div',\n\t        {\n\t          className: 'oui-progress__bar',\n\t          style: { 'width': allocated + '%' },\n\t          'aria-valuenow': '' + allocated,\n\t          'aria-valuemin': min,\n\t          'aria-valuemax': max },\n\t        !leftLabel && allocated + '%'\n\t      )\n\t    ),\n\t    leftLabel && rightLabel && _react2.default.createElement(\n\t      'div',\n\t      { className: 'flex flex--1 push-half--top' },\n\t      _react2.default.createElement(\n\t        'div',\n\t        { className: 'flex flex--1 muted milli' },\n\t        leftLabel + ': ' + allocated + '%'\n\t      ),\n\t      _react2.default.createElement(\n\t        'div',\n\t        { className: 'flex flex--1 muted milli flex-justified--end' },\n\t        rightLabel + ': ' + available + '%'\n\t      )\n\t    )\n\t  )\n\t  /* eslint-enable */\n\t  ;\n\t};\n\t\n\tProgressBar.propTypes = {\n\t  /** badNews will change the progress bar color to red */\n\t  displayError: _propTypes2.default.bool,\n\t  /** left label */\n\t  leftLabel: _propTypes2.default.string,\n\t  /** max */\n\t  max: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  /** min */\n\t  min: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  /** string data for progress */\n\t  progress: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  /** right label */\n\t  rightLabel: _propTypes2.default.string,\n\t  /** top label*/\n\t  topLabel: _propTypes2.default.string\n\t};\n\t\n\texports.default = ProgressBar;\n\tmodule.exports = exports['default'];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-components-progress-bar-js-63a72e3028abb1b9856b.js","\n  import React from 'react';\n  import ComponentContent from '../../layouts/templates/ComponentContent';\n\n   import examples from '../../../../src/components/ProgressBar/example'; import readme from 'raw-loader!../../../../src/components/ProgressBar/README.md';\n\n  const sassData = {\"name\":\"Progress Bar\\n\",\"description\":\"Creates a progress bar.\",\"start\":{\"line\":1,\"column\":1},\"end\":{\"line\":20,\"column\":4},\"example\":[{\"type\":\"html\",\"description\":null,\"code\":\"<div class=\\\"#{$namespace}progress\\\">\\n  <div class=\\\"#{$namespace}progress__bar\\\" style=\\\"width: 60%;\\\" aria-valuenow=\\\"60\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\">60%</div>\\n</div>\"},{\"type\":\"html\",\"description\":null,\"code\":\"<div class=\\\"#{$namespace}progress\\\">\\n  <div class=\\\"#{$namespace}progress__bar\\\" style=\\\"width: 1%;\\\" aria-valuenow=\\\"1\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\">1%</div>\\n</div>\"},{\"type\":\"html\",\"description\":null,\"code\":\"<div class=\\\"#{$namespace}progress\\\">\\n  <div class=\\\"#{$namespace}progress__bar\\\" style=\\\"width: 0%;\\\" aria-valuenow=\\\"0\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\">0%</div>\\n</div>\"},{\"type\":\"html\",\"description\":null,\"code\":\"<div class=\\\"#{$namespace}progress #{$namespace}progress--bad-news\\\">\\n  <div class=\\\"#{$namespace}progress__bar\\\" style=\\\"width: 80%;\\\" aria-valuenow=\\\"80\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\">80%</div>\\n</div>\"}]};\n  const reactData = {\"description\":\"Generates an `ProgressBar` element\\nmost of the common input types.\",\"methods\":[],\"props\":{\"displayError\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"badNews will change the progress bar color to red\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}},\"leftLabel\":{\"type\":{\"name\":\"string\"},\"required\":false,\"description\":\"left label\"},\"max\":{\"type\":{\"name\":\"union\",\"value\":[{\"name\":\"number\"},{\"name\":\"string\"}]},\"required\":false,\"description\":\"max\",\"defaultValue\":{\"value\":\"100\",\"computed\":false}},\"min\":{\"type\":{\"name\":\"union\",\"value\":[{\"name\":\"number\"},{\"name\":\"string\"}]},\"required\":false,\"description\":\"min\",\"defaultValue\":{\"value\":\"0\",\"computed\":false}},\"progress\":{\"type\":{\"name\":\"union\",\"value\":[{\"name\":\"number\"},{\"name\":\"string\"}]},\"required\":false,\"description\":\"string data for progress\"},\"rightLabel\":{\"type\":{\"name\":\"string\"},\"required\":false,\"description\":\"right label\"},\"topLabel\":{\"type\":{\"name\":\"string\"},\"required\":false,\"description\":\"top label\"}},\"private\":false};\n\n  let dataObject = {\n    react: reactData, \n    examples: examples ? examples : null,\n    readme: readme ? readme : null,\n    sass: sassData,\n  }\n  \n  class ProgressBarComponent extends React.Component {\n  \n    render() {\n      return (\n        <ComponentContent data={ dataObject } />\n      );\n    };\n  }\n  \n  export default ProgressBarComponent\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/components/ProgressBar.js","module.exports = \"# ProgressBar \\n## Progress Indicators\\nUse progress indicators to show the status of a task. Progress indicators come in two forms: finite and infinite.\\n\\n## Finite Progress Indicator\\nUse finite progress indicators to show the percentage of the task that's been completed. Use this only when you can accurately measure the progress of the task, such as when uploading a file.\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!../src/components/ProgressBar/README.md\n// module id = 647\n// module chunks = 162314516919203","/* eslint-disable react/jsx-key */\nimport React from 'react';\nimport ProgressBar from '../index';\n\nexport default [\n  {\n    examples: [\n      <ProgressBar\n        max=\"100\"\n        min=\"0\"\n        progress=\"60\"\n        topLabel=\"hola esto es un label\"\n      />,\n    ],\n  },\n  {\n    examples: [\n      <ProgressBar\n        max=\"80\"\n        min=\"0\"\n        progress=\"20\"\n      />,\n    ],\n  },\n  {\n    examples: [\n      <ProgressBar\n        leftLabel=\"Allocated traffic\"\n        max=\"250\"\n        min=\"0\"\n        progress=\"90\"\n        rightLabel=\"Available traffic\"\n      />,\n    ],\n  },\n  {\n    examples: [\n      <ProgressBar\n        leftLabel=\"Allocated traffic\"\n        min=\"20\"\n        max=\"80\"\n        progress=\"30\"\n        rightLabel=\"Available traffic\"\n        topLabel=\"hola esto es un label\"\n      />,\n    ],\n  },\n  {\n    examples: [\n      <ProgressBar\n        displayError={ true }\n        leftLabel=\"Allocated traffic\"\n        min=\"20\"\n        max=\"80\"\n        progress=\"30\"\n        rightLabel=\"Available traffic\"\n        topLabel=\"hola esto es un label\"\n      />,\n    ],\n  },\n  {\n    examples: [\n      <ProgressBar\n        displayError={ true }\n        min=\"0\"\n        max=\"100\"\n        progress=\"60\"\n      />,\n    ],\n  },\n];\n\n\n\n// WEBPACK FOOTER //\n// ../src/components/ProgressBar/example/index.js","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport classnames from 'classnames';\n\nimport Label from '../Label';\n\n/**\n * Generates an `ProgressBar` element\n * most of the common input types.\n * @param {Object} props - Properties passed to component\n * @returns {ReactElement}\n */\n\nconst ProgressBar = ({\n  displayError = false,\n  leftLabel,\n  max = 100,\n  min = 0,\n  progress,\n  rightLabel,\n  topLabel,\n}) => {\n  const ouiProgress = classnames(\n    'oui-progress',\n    { 'oui-progress--bad-news': displayError }\n  );\n\n  let range = max - min;\n  let allocated = Math.round(progress / range * 100);\n  let available = Math.round(100 - allocated);\n\n  return (\n    <div data-oui-component={ true }>\n      { topLabel &&\n        <Label>{ topLabel }</Label>\n      }\n      <div className={ ouiProgress }>\n        <div\n          className=\"oui-progress__bar\"\n          style={{ 'width': `${allocated}%`}}\n          aria-valuenow={ `${allocated}` }\n          aria-valuemin={ min }\n          aria-valuemax={ max }>\n          { !leftLabel && `${allocated}%`}\n        </div>\n      </div>\n      { leftLabel && rightLabel &&\n        <div className=\"flex flex--1 push-half--top\">\n          <div className=\"flex flex--1 muted milli\">\n            {`${leftLabel}: ${allocated}%`}\n          </div>\n          <div className=\"flex flex--1 muted milli flex-justified--end\">\n            {`${rightLabel}: ${available}%`}\n          </div>\n        </div>\n      }\n    </div>\n  /* eslint-enable */\n  );\n};\n\nProgressBar.propTypes = {\n  /** badNews will change the progress bar color to red */\n  displayError: PropTypes.bool,\n  /** left label */\n  leftLabel: PropTypes.string,\n  /** max */\n  max: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  /** min */\n  min: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  /** string data for progress */\n  progress: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  /** right label */\n  rightLabel: PropTypes.string,\n  /** top label*/\n  topLabel: PropTypes.string,\n};\n\nexport default ProgressBar;\n\n\n\n// WEBPACK FOOTER //\n// ../src/components/ProgressBar/index.js"],"sourceRoot":""}