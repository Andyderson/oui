////
/// Grids
/// @description Fluid and nestable grid system with responsive option.
/// @group Components
/// @example[scss] Responsive grid that will stack vertically when the browser
/// window is less than `500px`.
///   .mygrid {
///     @include grid($responsive: 500px);
///   }
/// @example[scss] Basic grid with a gutter that is set to default.
///   <div class="#{$namespace}grid">
///     <div class="#{$namespace}grid__cell">
///       <div class="background--faint">even width cells</div>
///     </div>
///     <div class="#{$namespace}grid__cell">
///       <div class="background--faint">even width cells</div>
///     </div>
///     <div class="#{$namespace}grid__cell">
///       <div class="background--faint">even width cells</div>
///     </div>
///   </div>
/// @example[scss] Basic grid with a narrow gutter.
///   <div class="#{$namespace}grid #{$namespace}grid--guttter--narrow">
///     <div class="#{$namespace}grid__cell">
///       <div class="background--faint">even width cells</div>
///     </div>
///     <div class="#{$namespace}grid__cell">
///       <div class="background--faint">even width cells</div>
///     </div>
///     <div class="#{$namespace}grid__cell">
///       <div class="background--faint">even width cells</div>
///     </div>
///   </div>
/// @example[scss] Basic grid with a narrow gutter.
///   <div class="#{$namespace}grid #{$namespace}grid--guttter--wide">
///     <div class="#{$namespace}grid__cell">
///       <div class="background--faint">even width cells</div>
///     </div>
///     <div class="#{$namespace}grid__cell">
///       <div class="background--faint">even width cells</div>
///     </div>
///     <div class="#{$namespace}grid__cell">
///       <div class="background--faint">even width cells</div>
///     </div>
///   </div>
/// @example[scss] Basic grid with no gutter.
///   <div class="#{$namespace}grid #{$namespace}grid--flush">
///     <div class="#{$namespace}grid__cell">
///       <div class="background--faint">even width cells</div>
///     </div>
///     <div class="#{$namespace}grid__cell">
///       <div class="background--faint">even width cells</div>
///     </div>
///     <div class="#{$namespace}grid__cell">
///       <div class="background--faint">even width cells</div>
///     </div>
///   </div>
/// @example[scss] Basic grid of different widths.
///   <div class="#{$namespace}grid #{$namespace}grid--flush">
///     <div class="#{$namespace}grid__cell width-3-5">
///       <div class="background--faint">even width cells</div>
///     </div>
///     <div class="#{$namespace}grid__cell width-1-5">
///       <div class="background--faint">even width cells</div>
///     </div>
///     <div class="#{$namespace}grid__cell width-1-5">
///       <div class="background--faint">even width cells</div>
///     </div>
///   </div>
////

@mixin grid($responsive: null) {
  @include display(flex);
  @include flex-wrap(wrap);
  margin-left: -(spacer(2));

  &__cell {
    @include flex(1);
    padding-left: spacer(2);
  }

  &--gutter--narrow {
    margin-left: -(spacer(1));

    > .#{$namespace}grid__cell {
      padding-left: spacer(1);
    }
  }

  &--gutter--wide {
    margin-left: -(spacer(4));

    > .#{$namespace}grid__cell {
      padding-left: spacer(4);
    }
  }

  &--flush {
    margin-left: 0;

    > .#{$namespace}grid__cell {
      padding-left: 0;
    }
  }

  // Grid cells only grow as large as the content.
  &--natural {
    > .#{$namespace}grid__cell {
      @include flex(none);
    }
  }

  @if ($responsive) {
    @include breakpoint($max: $responsive) {
      display: block;
      margin-left: 0;

      &__cell {
        @include flex(none);
        padding-left: 0 !important;
        margin-bottom: spacer(2);
      }

      &--gutter--wide,
      &--gutter--narrow {
        margin-left: 0;
      }
    }
  }

  // Grid Alignment
  // Moves grid cells to align center or anchored at the bottom of the grid.

  &--center {
    @include align-items(center);
  }

  &--bottom {
    @include align-items(flex-end);
  }

  // Grid Widths
  // If a width is specificed on a `cell__grid` then have to disable the
  // default `flex` value otherwise it won't obey the width.

  &__cell[class*="width-"] {
    -webkit-flex: none;
    -ms-flex: none;
    flex: none;
  }
}

%#{$namespace}grid,
.#{$namespace}grid {
  @include grid;
}
