// # Spinner
// Loading spinner available at a few sizes. spinner color is embedded in the div.

// ## Example

//[hc]
//     <div class="lego-spinner-wrap">
//       <div class="lego-spinner"></div>
//     </div>
//     <div class="lego-spinner-wrap">
//       <div class="lego-spinner lego-spinner--small"></div>
//     </div>
//[/hc]

// Note: To position spinner target `.lego-spinner-wrap`.

// ## SCSS

@-webkit-keyframes lego-spin {
  100% { -webkit-transform: rotate(360deg) } // Safari
}

@keyframes lego-spin {
  100% { transform: rotate(360deg) }
}

.lego-spinner {
  display: inline-block;
  width: map-get($spinner, size-default);
  height: map-get($spinner, size-default);
  border-radius: 50%;
  border: map-get($spinner, border-width) solid map-get($spinner, border-color-light);
  position: relative;
  -webkit-animation: lego-spin map-get($spinner, speed) infinite linear;
  animation: lego-spin map-get($spinner, speed) infinite linear;

  &:before {
    content: "";
    width: map-get($spinner, size-default);
    height: map-get($spinner, size-default);
    border-radius: 50%;
    display: block;
    position: absolute;
    left: -(map-get($spinner, border-width));
    top: -(map-get($spinner, border-width));
    border-width: map-get($spinner, border-width);
    border-style: solid;
    border-right-color: map-get($spinner, border-color-light);
    border-top-color: map-get($spinner, border-color-light);
    border-left-color: map-get($ui-color, brand);
    border-bottom-color: map-get($spinner, border-color-light);
  }

  &--small {
    width: map-get($spinner, size-small);
    height: map-get($spinner, size-small);

    &:before {
      width: map-get($spinner, size-small);
      height: map-get($spinner, size-small);
    }
  }
}
