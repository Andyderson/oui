// # Layout
// Major layout elements for the desktop.

.lego-data-sidebar {
  background: map-get($background-color, faint);
  width: map-get($layout-width, data-sidebar);
  box-shadow: -1px -0 0 map-get($ui-color, base); // IE 10: border causes horizontal scrollbar.

  // IE 10: Have to restate width in child or width won't be honored.

  .accordion {
    width: map-get($layout-width, data-sidebar);
  }
}

// You can use with a width class if you want to further constrain the width.
// The max-width prevents it from becoming to wide for readability.

.lego-layout--single-column {
  margin-left: auto;
  margin-right: auto;
  max-width: map-get($layout-width, single-column);
}

.lego-layout--narrow-column {
  margin-left: auto;
  margin-right: auto;
  max-width: map-get($layout-width, narrow-column);
}

// Create sections for consitent spacing, especially in the sidebar.

.lego-sections {
  @extend %kill-last-child-margin;

  &__item {
    margin-bottom: spacer(2.5);
  }
}

// ### Max Width Containers
// Create sections for consitent spacing, especially in the sidebar.

.max-width--reading {
  max-width: map-get($layout-width, reading);
}

// Full page container.

.max-width--page {
  width: 100%; // Needed because flex children won't fill space by default.
  max-width: map-get($layout-width, body);
}

// # No Page Min
// Restore normal page layout by adding to `<body>` tag.

.no-min-width {
  min-width: 0;
}
