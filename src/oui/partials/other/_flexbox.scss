////
/// Flexbox
/// @description Flexbox fully supported in Chrome, Firefox and Safari
/// and mostly supported in IE 10.
///
/// In IE10 at least one of the flex children needs to have a width or flex
/// value otherwise the content in those children will not wrap. However, if
/// none of children will collide, no width or flex value is needed.
///
/// `flex-grow` is not supported by IE10, `justify-content` is the next best
/// thing.
/// @example[scss] Mixins can be used in SCSS files.
///   .foo {
///     @include display(flex);
///     @include flex(1);
///   }
/// @example[html] Classes can be used directly in HTML.
///   <div class="flex flex--1">item</div>
/// @group Elements
////

@import '../sass/flexbox';

.flex {
  @include display(flex);
}

.flex--row {
  @include flex-direction(row);
}

.flex--column {
  @include flex-direction(column);
}

.flex--1 {
  @include flex(1);
}

.flex--none {
  @include flex(none);
}

// Flex align

.flex-align--start {
  @include align-items(flex-start);
}

.flex-align--center {
  @include align-items(center);
}

.flex-align--end {
  @include align-items(flex-end);
}

// Flex justified

.flex-justified--start {
  @include justify-content(flex-start);
}

.flex-justified--center {
  @include justify-content(center);
}

.flex-justified--end {
  @include justify-content(flex-end);
}

.flex-justified--between {
  @include justify-content(space-between);
}

// Flex wrap

.flex-wrap {
  @include flex-wrap(wrap);
}

.flex-wrap--reverse {
  @include flex-wrap(wrap-reverse);
}

// Flex align-self
// Note: applies to immediate children of `display: flex;` parent.

.flex-self--start {
  @include align-self(flex-start);
}

.flex-self--center {
  @include align-self(center);
}

.flex-self--end {
  @include align-self(flex-end);
}
