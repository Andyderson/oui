// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/Dropdown should highlight button class when style equals highlight 1`] = `
<div
  className="oui-dropdown-group"
  data-ui-component={true}
>
  <button
    className="oui-button oui-button--highlight"
    disabled={false}
    onBlur={[Function]}
    onClick={[Function]}
  >
    <div
      className="flex"
    >
      <div
        className="flex--1 truncate"
      >
        Dropdown
      </div>
      <div
        className="text--right"
      >
        <span
          className="push-half--left oui-arrow-inline--down"
        />
      </div>
    </div>
  </button>
  <div
    className="oui-dropdown-children"
    onClick={[Function]}
    onMouseLeave={[Function]}
    onMouseOver={[Function]}
    style={
      Object {
        "position": "absolute",
        "width": 200,
        "zIndex": 999,
      }
    }
  />
</div>
`;

exports[`components/Dropdown should not render children when isDisabled is true 1`] = `
<div
  className="oui-dropdown-group"
  data-ui-component={true}
>
  <button
    className="oui-button"
    disabled={false}
    onBlur={[Function]}
    onClick={[Function]}
  >
    <div
      className="flex"
    >
      <div
        className="flex--1 truncate"
      >
        Dropdown
      </div>
      <div
        className="text--right"
      >
        <span
          className="push-half--left oui-arrow-inline--down"
        />
      </div>
    </div>
  </button>
  <div
    className="oui-dropdown-children"
    onClick={[Function]}
    onMouseLeave={[Function]}
    onMouseOver={[Function]}
    style={
      Object {
        "position": "absolute",
        "width": 200,
        "zIndex": 999,
      }
    }
  />
</div>
`;

exports[`components/Dropdown should not use .oui-arrow-inline--down when icon isEqual to triangle 1`] = `
<div
  className="oui-dropdown-group"
  data-ui-component={true}
>
  <button
    className="oui-button"
    disabled={false}
    onBlur={[Function]}
    onClick={[Function]}
  >
    <div
      className="flex"
    >
      <div
        className="flex--1 truncate"
      >
        Dropdown
      </div>
      <div
        className="text--right"
      >
        <span
          className="push-half--left oui-arrow-inline--down"
        />
      </div>
    </div>
  </button>
  <div
    className="oui-dropdown-children"
    onClick={[Function]}
    onMouseLeave={[Function]}
    onMouseOver={[Function]}
    style={
      Object {
        "position": "absolute",
        "width": 200,
        "zIndex": 999,
      }
    }
  />
</div>
`;

exports[`components/Dropdown should render children when isOpen is true 1`] = `
<div
  className="oui-dropdown-group"
  data-ui-component={true}
>
  <button
    className="oui-button"
    disabled={false}
    onBlur={[Function]}
    onClick={[Function]}
  >
    <div
      className="flex"
    >
      <div
        className="flex--1 truncate"
      >
        Dropdown
      </div>
      <div
        className="text--right"
      >
        <span
          className="push-half--left oui-arrow-inline--down"
        />
      </div>
    </div>
  </button>
  <div
    className="oui-dropdown-children"
    onClick={[Function]}
    onMouseLeave={[Function]}
    onMouseOver={[Function]}
    style={
      Object {
        "position": "absolute",
        "width": 200,
        "zIndex": 999,
      }
    }
  />
</div>
`;

exports[`components/Dropdown should use oui-button--full class when fullWidth is true 1`] = `
<div
  className="oui-dropdown-group width--1-1"
  data-ui-component={true}
>
  <button
    className="oui-button oui-button--full soft--left text--left"
    disabled={false}
    onBlur={[Function]}
    onClick={[Function]}
  >
    <div
      className="flex"
    >
      <div
        className="flex--1 truncate"
      >
        Dropdown
      </div>
      <div
        className="text--right"
      >
        <span
          className="push-half--left oui-arrow-inline--down"
        />
      </div>
    </div>
  </button>
  <div
    className="oui-dropdown-children"
    onClick={[Function]}
    onMouseLeave={[Function]}
    onMouseOver={[Function]}
    style={
      Object {
        "position": "absolute",
        "width": 200,
        "zIndex": 999,
      }
    }
  />
</div>
`;
